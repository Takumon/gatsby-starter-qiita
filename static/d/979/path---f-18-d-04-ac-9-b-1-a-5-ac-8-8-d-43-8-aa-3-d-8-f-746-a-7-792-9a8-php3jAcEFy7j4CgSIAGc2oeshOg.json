{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Qiita","author":"Takumon"}},"qiitaPost":{"rendered_body":"\n<h2>\n<span id=\"なにこれ\" class=\"fragment\"></span><a href=\"#%E3%81%AA%E3%81%AB%E3%81%93%E3%82%8C\"><i class=\"fa fa-link\"></i></a>なにこれ</h2>\n\n<p>React.js製の静的サイトジェネレーター <a href=\"https://www.gatsbyjs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Gatsby</a>は、<a href=\"https://www.gatsbyjs.org/plugins/\" rel=\"nofollow noopener\" target=\"_blank\">プラグイン</a>を使って簡単に機能拡張できる仕組みを持っています。<a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages\" rel=\"nofollow noopener\" target=\"_blank\">公式プラグイン</a>とコミュニティ提供のものをあわせると、なんと502個もあるそうです。今回はその中でも、おすすめ45個をユースケース別にご紹介します。</p>\n\n<p>※ 本記事は<a href=\"https://takumon.com/2018/10/21/\" rel=\"nofollow noopener\" target=\"_blank\">ブログ</a>の転記です。Qiitaで使えない機能（コードブロックの指定行強調表示など）の表示結果はスクリーンキャプチャにしています。HTMLでの表示結果を見たい場合は<a href=\"https://takumon.com/2018/10/21/\" rel=\"nofollow noopener\" target=\"_blank\">ブログ</a>をご覧ください。</p>\n\n<h2>\n<span id=\"ユースケース別目次\" class=\"fragment\"></span><a href=\"#%E3%83%A6%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%82%B9%E5%88%A5%E7%9B%AE%E6%AC%A1\"><i class=\"fa fa-link\"></i></a>ユースケース別目次</h2>\n\n<p>※クリックすると説明セクションにとべます。</p>\n\n<p><strong><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E7%B3%BB\">マークダウン系</a></strong></p>\n\n<ul>\n<li><a href=\"#gatsby-remark-prismjs\">コードブロックでシンタックスハイライトする</a></li>\n<li><a href=\"#gatsby-remark-code-titles\">コードブロックにタイトルを追加する</a></li>\n<li><a href=\"#gatsby-remark-autolink-headers\">見出しにGitHub風ホバーリンクをつける</a></li>\n<li><a href=\"#gatsby-remark-emojis\">絵文字を使う</a></li>\n<li><a href=\"#gatsby-remark-graphviz\">Graphvizでグラフを描画する</a></li>\n<li><a href=\"#gatsby-remark-katex\">数式を使う</a></li>\n<li><a href=\"#gatsby-remark-embed-snippet\">コードブロックにJavaSriptファイルなどを埋め込む</a></li>\n<li><a href=\"#gatsby-remark-copy-linked-files\">リンクされているPDFや動画などをビルド時にpublicフォルダにコピーする</a></li>\n<li><a href=\"#gatsby-remark-images\">画像をスマートに表示する</a></li>\n<li><a href=\"#gatsby-remark-responsive-iframe\">iframeタグを縦横比固定でレスポンシブ化する</a></li>\n<li><a href=\"#gatsby-remark-embed-youtube\">Youtubeを埋め込む</a></li>\n<li><a href=\"#gatsby-plugin-twitter\">Twitterの埋め込む</a></li>\n</ul>\n\n<p><strong><a href=\"#seo%E7%B3%BB\">SEO系</a></strong></p>\n\n<ul>\n<li><a href=\"#gatsby-plugin-react-helmet\">React Helmetを使う</a></li>\n<li><a href=\"#gatsby-plugin-offline\">オフライン環境でもWebサイトをスムーズに見れるようにする</a></li>\n<li><a href=\"#gatsby-plugin-manifest\">PWA対応する（manifest.webmanifestを生成する）</a></li>\n<li><a href=\"#gatsby-plugin-sitemap\">サイトマップを生成する</a></li>\n<li><a href=\"#gatsby-plugin-canonical-urls\">canonical linksを追加する</a></li>\n<li><a href=\"#gatsby-plugin-feed\">RSSフィードを生成する</a></li>\n<li><a href=\"#gatsby-plugin-robots-txt\">robots.txtを生成する</a></li>\n</ul>\n\n<p><strong><a href=\"#%E9%96%8B%E8%A3%9C%E8%A3%9C%E5%8A%A9%E7%B3%BB\">開補補助系</a></strong></p>\n\n<ul>\n<li><a href=\"#gatsby-plugin-lodash\">ビルド資産（bundle.js）のlodashのサイズ削減する</a></li>\n<li><a href=\"#gatsby-plugin-webpack-bundle-analyzer\">ビルド資産（bundle.js）の中身のサイズを可視化する</a></li>\n<li><a href=\"#gatsby-plugin-google-analytics\">Google Analyticsを使う</a></li>\n<li><a href=\"#gatsby-plugin-facebook-analytics\">Facebook Analyticsを使う</a></li>\n</ul>\n\n<p><strong><a href=\"#ui%E7%B3%BB\">UI系</a></strong></p>\n\n<ul>\n<li><a href=\"#gatsby-plugin-nprogress\">ローディング中にプログレスバー表示</a></li>\n<li><a href=\"#gatsby-plugin-catch-links\">aタグでローカル遷移時にリロードではなくヒストリーAPIで遷移</a></li>\n<li><a href=\"#gatsby-plugin-layout\">1系のレイアウト機能を2系で使う</a></li>\n</ul>\n\n<p><strong><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\">ファイル系</a></strong></p>\n\n<ul>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\">JSONファイルをパースする</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\">XMLファイルをパースする</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\">Yamlファイルをパースする</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\">CSVファイルをパースする</a></li>\n<li><a href=\"#gatsby-source-filesystem\">ファイルを読み取んでノードを生成する</a></li>\n<li><a href=\"#gatsby-transformer-remark\">Markdownファイルをパースする</a></li>\n<li><a href=\"#gatsby-image\">画像読み込みを最適化する</a></li>\n<li><a href=\"#gatsby-transformer-sharp\">画像読み込みでImageSharpノードを生成する</a></li>\n<li><a href=\"#gatsby-plugin-sharp\">Sharp(画像圧縮ライブラリ)を使う</a></li>\n</ul>\n\n<p><strong><a href=\"#css%E7%B3%BB\">CSS系</a></strong></p>\n\n<ul>\n<li>SASS/SCSSを使う</li>\n<li>Styled Componentsを使う</li>\n<li>Glamorとglamorousを使う</li>\n<li>Emotionを使う</li>\n<li>PostCSSを使う</li>\n<li><a href=\"#gatsby-plugin-typography\">Typography.js(文章のスタイルを設定するライブラリ)を使う</a></li>\n</ul>\n\n<p><strong><a href=\"#%E5%A4%96%E9%83%A8%E9%80%A3%E6%90%BA%E7%B3%BB\">外部連携系</a></strong></p>\n\n<ul>\n<li>Mediumのデータを取得する</li>\n<li>WordPressのデータを取得する</li>\n<li>contentfulのデータを取得する</li>\n<li><a href=\"#gatsby-source-esa\">esa.ioのデータを取得する</a></li>\n</ul>\n\n<h2>\n<span id=\"プラグインの使い方\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>プラグインの使い方</h2>\n\n<p>※知ってる人は読み飛ばしてください。</p>\n\n<ul>\n<li>プラグインはnpmパッケージで公開されているのでnpmインストールする</li>\n<li>\n<code>gatsby-config.js</code>のpluginsに定義を追加する</li>\n<li>下記のようにオプションも指定できる</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// オプションなしで指定する場合は下記のようにプラグイン名を文字列で指定しましょう。</span>\n    <span class=\"s2\">\"gatsby-plugin-react-helmet\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// オプションありの場合は、オブジェクトで指定します。</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-filesystem`</span><span class=\"p\">,</span>\n      <span class=\"c1\">// オプションはさらにオブジェクトで指定します。</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">__dirname</span><span class=\"p\">}</span><span class=\"s2\">/src/data/`</span><span class=\"p\">,</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s2\">\"data\"</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// プラグイン自体を拡張するプラグインを指定できます。</span>\n        <span class=\"c1\">// その場合はオプションのpluginsにプラグインを定義しましょう。</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">`gatsby-remark-smartypants`</span><span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">\"gatsby-plugin-offline\"</span><span class=\"p\">,</span>\n      <span class=\"c1\">// 下記のように空オプションの場合は、プラグイン名を文字列で指定した場合と同じです。</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p>※ 詳細は<a href=\"https://takumon.com/2018/10/20/#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\" rel=\"nofollow noopener\" target=\"_blank\">Gatsbyプラグインの使い方･作り方･公開方法 | Takumon Blog</a>を参照してください。</p>\n\n<h2>\n<span id=\"マークダウン系\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>マークダウン系</h2>\n\n<p>ここで紹介するプラグインは<a href=\"gatsby-transformer-remark\">gatsby-transformer-remark</a>の拡張です。<br><br>\nそのためプラグインを使う時は、<code>gatsby-config.js</code>ではgatsby-transformer-remarkのオプションとして定義します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n    <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-prismjs`</span><span class=\"p\">,</span>\n          <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">classPrefix</span><span class=\"p\">:</span> <span class=\"s2\">\"language-\"</span><span class=\"p\">,</span>\n            <span class=\"na\">inlineCodeMarker</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"na\">aliases</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n            <span class=\"na\">showLineNumbers</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"na\">noInlineHighlight</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-prismjs\" class=\"fragment\"></span><a href=\"#gatsby-remark-prismjs\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-prismjs</a>\n</h3>\n\n<p><strong>マークダウンのコードブロックでシンタックスハイライトできるようにする</strong><br>\n* <a href=\"https://prismjs.com/\" rel=\"nofollow noopener\" target=\"_blank\">Prism.js</a>を使ってシンタックスハイライトします。他にも行数表示や指定行強調といった機能が使えます。<br>\n* Gatsbyで技術系ブログを作るなら、このプラグインが一番重要でしょう。使い方の詳細も含めてご紹介します。</p>\n\n<h4>\n<span id=\"設定\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p><code>gatsby-config.js</code>で下記のように定義します。<br>\nオプションが複数ありあますが重要なのは<code>showLineNumbers</code>だけです。<code>true</code>だとコードブロックの行数表示機能が使えるようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n    <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-prismjs`</span><span class=\"p\">,</span>\n          <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">classPrefix</span><span class=\"p\">:</span> <span class=\"s2\">\"language-\"</span><span class=\"p\">,</span>\n            <span class=\"na\">inlineCodeMarker</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"na\">aliases</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n            <span class=\"na\">showLineNumbers</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"na\">noInlineHighlight</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>若干めんどくさいですが、<code>gatsby-config.js</code>以外にもやることがあります。<br><br>\n<code>gatsby-browser.js</code>でPrismJSのテーマを読み込みます。<br><br>\n<code>gatsby-browser.js</code>は、なければプロジェクトのルートフォルダ直下に作成してください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-browser.js</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"prismjs/themes/prism-solarizedlight.css\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><br><br>\n行数を表示するには、専用のCSSを読み込みます。<br></p>\n\n<div class=\"code-frame\" data-lang=\"js\">\n<div class=\"code-lang\"><span class=\"bold\">src/components/layout.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"s1\">'prismjs/plugins/line-numbers/prism-line-numbers.css'</span><span class=\"p\">;</span>\n\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>指定行を強調表示させるにはCSSを定義してください。</p>\n\n<div class=\"code-frame\" data-lang=\"css\"><div class=\"highlight\"><pre><span class=\"nc\">.gatsby-highlight-code-line</span> <span class=\"p\">{</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#feb</span><span class=\"p\">;</span>\n  <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"nb\">block</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin-right</span><span class=\"p\">:</span> <span class=\"m\">-1em</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin-left</span><span class=\"p\">:</span> <span class=\"m\">-1em</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding-right</span><span class=\"p\">:</span> <span class=\"m\">1em</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding-left</span><span class=\"p\">:</span> <span class=\"m\">0.75em</span><span class=\"p\">;</span>\n  <span class=\"nl\">border-left</span><span class=\"p\">:</span> <span class=\"m\">0.25em</span> <span class=\"nb\">solid</span> <span class=\"m\">#f99</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nc\">.gatsby-highlight</span> <span class=\"p\">{</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#fdf6e3</span><span class=\"p\">;</span>\n  <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">0.3em</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">0.5em</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">1em</span><span class=\"p\">;</span>\n  <span class=\"nl\">overflow</span><span class=\"p\">:</span> <span class=\"nb\">auto</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nc\">.gatsby-highlight</span> <span class=\"nt\">pre</span><span class=\"o\">[</span><span class=\"nt\">class</span><span class=\"o\">*=</span><span class=\"s1\">\"language-\"</span><span class=\"o\">]</span> <span class=\"p\">{</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"nb\">transparent</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">overflow</span><span class=\"p\">:</span> <span class=\"n\">initial</span><span class=\"p\">;</span>\n  <span class=\"nl\">float</span><span class=\"p\">:</span> <span class=\"nb\">left</span><span class=\"p\">;</span> <span class=\"c\">/* 1 */</span>\n  <span class=\"nl\">min-width</span><span class=\"p\">:</span> <span class=\"m\">100%</span><span class=\"p\">;</span> <span class=\"c\">/* 2 */</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.gatsby-highlight</span> <span class=\"nt\">pre</span><span class=\"o\">[</span><span class=\"nt\">class</span><span class=\"o\">*=</span><span class=\"s1\">\"language-\"</span><span class=\"o\">]</span><span class=\"nc\">.line-numbers</span> <span class=\"p\">{</span>\n  <span class=\"nl\">padding-left</span><span class=\"p\">:</span> <span class=\"m\">2.8em</span><span class=\"p\">;</span> <span class=\"c\">/* 3 */</span>\n<span class=\"p\">}</span>\n</pre></div></div>\n\n<p><br></p>\n\n<h4>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>シンタックスハイライトだけなら下記のように記述します。</p>\n\n<ul>\n<li>記述方法</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript\nplugins:[\n  {\n    resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          `gatsby-remark-prismjs`,\n        ]\n      }\n    }\n  } \n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/02b666af653df603b518bbc431fc8238a9101df3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f66343238346434392d626461642d373865302d613764322d3563323931373563646635652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/02b666af653df603b518bbc431fc8238a9101df3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f66343238346434392d626461642d373865302d613764322d3563323931373563646635652e706e67\" alt=\"スクリーンショット 2018-10-22 22.46.27.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/f4284d49-bdad-78e0-a7d2-5c29175cdf5e.png\"></a></p>\n\n<p>行数表示や指定行強調を使う場合コードブロックの1行目(```の部分)にそれらの情報を記載します。以降に詳細を示します。</p>\n\n<h5>\n<span id=\"行数表示する場合\" class=\"fragment\"></span><a href=\"#%E8%A1%8C%E6%95%B0%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>行数表示する場合</h5>\n\n<ul>\n<li>記述方法</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript{numberLines: true}\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/d260ef23960977cde69e9ec062180fee82ac8707/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f65613863326630642d653034352d346332662d326636302d3531383233626232613361652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/d260ef23960977cde69e9ec062180fee82ac8707/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f65613863326630642d653034352d346332662d326636302d3531383233626232613361652e706e67\" alt=\"スクリーンショット 2018-10-22 22.46.41.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/ea8c2f0d-e045-4c2f-2f60-51823bb2a3ae.png\"></a></p>\n\n<h5>\n<span id=\"行数表示する場合開始行数指定あり\" class=\"fragment\"></span><a href=\"#%E8%A1%8C%E6%95%B0%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E9%96%8B%E5%A7%8B%E8%A1%8C%E6%95%B0%E6%8C%87%E5%AE%9A%E3%81%82%E3%82%8A\"><i class=\"fa fa-link\"></i></a>行数表示する場合（開始行数指定あり）</h5>\n\n<ul>\n<li>記述方法</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript{numberLines: 5}\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/0493012e1f6a73e67a66c2fb7d07ad09caa99e14/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f36613635343132632d356430642d386364352d616566362d6265303264616563633231392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/0493012e1f6a73e67a66c2fb7d07ad09caa99e14/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f36613635343132632d356430642d386364352d616566362d6265303264616563633231392e706e67\" alt=\"スクリーンショット 2018-10-22 22.47.00.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/6a65412c-5d0d-8cd5-aef6-be02daecc219.png\"></a></p>\n\n<h5>\n<span id=\"指定行数を強調する場合\" class=\"fragment\"></span><a href=\"#%E6%8C%87%E5%AE%9A%E8%A1%8C%E6%95%B0%E3%82%92%E5%BC%B7%E8%AA%BF%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>指定行数を強調する場合</h5>\n\n<ul>\n<li>記述方法</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript{1,5-9}\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/3ab7eae120380a79128489b8af36699d65b79d9d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f61643938313762342d396130652d306133352d643566642d3561623634633033353464312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/3ab7eae120380a79128489b8af36699d65b79d9d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f61643938313762342d396130652d306133352d643566642d3561623634633033353464312e706e67\" alt=\"スクリーンショット 2018-10-22 22.47.08.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/ad9817b4-9a0e-0a35-d5fd-5ab64c0354d1.png\"></a></p>\n\n<h5>\n<span id=\"全部の組み合わせ指定行数を強調かつ行数表示\" class=\"fragment\"></span><a href=\"#%E5%85%A8%E9%83%A8%E3%81%AE%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E6%8C%87%E5%AE%9A%E8%A1%8C%E6%95%B0%E3%82%92%E5%BC%B7%E8%AA%BF%E3%81%8B%E3%81%A4%E8%A1%8C%E6%95%B0%E8%A1%A8%E7%A4%BA\"><i class=\"fa fa-link\"></i></a>全部の組み合わせ（指定行数を強調かつ行数表示）</h5>\n\n<ul>\n<li>記述方法（2つの括弧を定義します）</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript{numberLines: 5}{1,5-9}\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/c58a55c9c942a073fe7b66943cf7b3a9f606d687/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63383636383930622d323232662d636566632d636133392d6232383762356534313833392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/c58a55c9c942a073fe7b66943cf7b3a9f606d687/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63383636383930622d323232662d636566632d636133392d6232383762356534313833392e706e67\" alt=\"スクリーンショット 2018-10-22 22.47.17.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/c866890b-222f-cefc-ca39-b287b5e41839.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-code-titles\" class=\"fragment\"></span><a href=\"#gatsby-remark-code-titles\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-code-titles/?=gatsby-remark-code-titles\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-code-titles</a>\n</h3>\n\n<p><strong>マークダウンでコードブロックにタイトルを表示できるようにする</strong></p>\n\n<h4>\n<span id=\"設定-1\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-1\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<ul>\n<li>前述のgatsby-remark-prismjsとあわせて使います。</li>\n</ul>\n\n<p><code>gatsby-config.js</code>で<code>gatsby-transformer-remark</code>オプションとして一番最初に定義する必要があります。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">`gatsby-remark-code-titles`</span><span class=\"p\">,</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-prismjs`</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">classPrefix</span><span class=\"p\">:</span> <span class=\"s2\">\"language-\"</span><span class=\"p\">,</span>\n              <span class=\"na\">inlineCodeMarker</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n              <span class=\"na\">aliases</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n              <span class=\"na\">showLineNumbers</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br><br>\nさらにCSSでスタイルを追加しましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"css\"><div class=\"highlight\"><pre><span class=\"nc\">.gatsby-code-title</span> <span class=\"p\">{</span>\n  <span class=\"nl\">background</span><span class=\"p\">:</span> <span class=\"m\">#f3e3b9</span><span class=\"p\">;</span>\n  <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#b38383</span><span class=\"p\">;</span>\n  <span class=\"nl\">margin-bottom</span><span class=\"p\">:</span> <span class=\"m\">-0.65em</span><span class=\"p\">;</span>\n  <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">0.7rem</span> <span class=\"m\">1.05rem</span><span class=\"p\">;</span>\n  <span class=\"nl\">font-size</span><span class=\"p\">:</span> <span class=\"m\">0.8em</span><span class=\"p\">;</span>\n  <span class=\"nl\">line-height</span><span class=\"p\">:</span> <span class=\"m\">0.2</span><span class=\"p\">;</span>\n  <span class=\"nl\">font-family</span><span class=\"p\">:</span> <span class=\"n\">SFMono-Regular</span><span class=\"p\">,</span><span class=\"n\">Menlo</span><span class=\"p\">,</span><span class=\"n\">Monaco</span><span class=\"p\">,</span><span class=\"n\">Consolas</span><span class=\"p\">,</span><span class=\"n\">Liberation</span> <span class=\"n\">Mono</span><span class=\"p\">,</span><span class=\"n\">Courier</span> <span class=\"n\">New</span><span class=\"p\">,</span><span class=\"nb\">monospace</span><span class=\"p\">;</span>\n  <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"m\">600</span><span class=\"p\">;</span>\n  <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">8px</span> <span class=\"m\">8px</span> <span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n  <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"n\">table</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div></div>\n\n<h4>\n<span id=\"使い方-1\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-1\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<ul>\n<li>マークダウンでコードブロックの一行目に<code>:title=タイトル名</code>と記述します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript:title=gatsby-config.js\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/0a3fdf6e1f69f1409342c7fe2ee2f736ef3270f3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64386365343631362d373335652d343134392d623264332d3330373531306337613531642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/0a3fdf6e1f69f1409342c7fe2ee2f736ef3270f3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64386365343631362d373335652d343134392d623264332d3330373531306337613531642e706e67\" alt=\"スクリーンショット 2018-10-22 23.20.45.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/d8ce4616-735e-4149-b2d3-307510c7a51d.png\"></a></p>\n\n<h5>\n<span id=\"強調行指定との組み合わせ\" class=\"fragment\"></span><a href=\"#%E5%BC%B7%E8%AA%BF%E8%A1%8C%E6%8C%87%E5%AE%9A%E3%81%A8%E3%81%AE%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B\"><i class=\"fa fa-link\"></i></a>強調行指定との組み合わせ</h5>\n\n<ul>\n<li>強調行の後にタイトルを記述します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```javascript{1, 5-9}:gatsby-config.js\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n]\n```\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/d4f812f1ccb4479e2b9cdc9fa72d3d599155fe52/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35383535313732662d666663632d633062632d323336322d6330363865323063386337372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/d4f812f1ccb4479e2b9cdc9fa72d3d599155fe52/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35383535313732662d666663632d633062632d323336322d6330363865323063386337372e706e67\" alt=\"スクリーンショット 2018-10-22 23.20.56.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/5855172f-ffcc-c0bc-2362-c068e20c8c77.png\"></a></p>\n\n<h5>\n<span id=\"行数表示との組み合わせ\" class=\"fragment\"></span><a href=\"#%E8%A1%8C%E6%95%B0%E8%A1%A8%E7%A4%BA%E3%81%A8%E3%81%AE%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B\"><i class=\"fa fa-link\"></i></a>行数表示との組み合わせ</h5>\n\n<p>なぜかできませんでした...プラグインの相性が悪いのかもしれません。</p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-autolink-headers\" class=\"fragment\"></span><a href=\"#gatsby-remark-autolink-headers\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-autolink-headers\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-autolink-headers</a>\n</h3>\n\n<p><strong>マークダウンで見出しにGitHub風ホバーリンクをつける</strong></p>\n\n<p>見出しホバー時に鎖アイコンリンクが表示されます。<br>\nリンクを指定して初期表示すると見出しまでスクロースしてくれるので便利です。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/45489494a718ac4d508bd05a61db4d47aed9729a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f33616365386363342d313337662d653937372d653432332d3635323739643332326231302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/45489494a718ac4d508bd05a61db4d47aed9729a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f33616365386363342d313337662d653937372d653432332d3635323739643332326231302e706e67\" alt=\"スクリーンショット 2018-10-22 23.22.56.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/3ace8cc4-137f-e977-e423-65279d322b10.png\"></a></p>\n\n<h4>\n<span id=\"設定-2\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-2\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p>オプションでアイコン、アイコンの位置、アイコンのクラス名を指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-autolink-headers`</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">offsetY</span><span class=\"p\">:</span> <span class=\"s2\">`100`</span><span class=\"p\">,</span>\n              <span class=\"na\">icon</span><span class=\"p\">:</span> <span class=\"s2\">`&lt;svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"&gt;&lt;path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"&gt;&lt;/path&gt;&lt;/svg&gt;`</span><span class=\"p\">,</span>\n              <span class=\"na\">className</span><span class=\"p\">:</span> <span class=\"s2\">`custom-class`</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"補足\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>補足</h4>\n\n<p><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-autolink-headers/#how-to-use\" rel=\"nofollow noopener\" target=\"_blank\">公式サイト</a>には下記記述がありますが<br>\n起因となった<a href=\"https://github.com/gatsbyjs/gatsby/issues/5764\" rel=\"nofollow noopener\" target=\"_blank\">issue 5764</a>はもう解決済みたいなので、定義順は特に気にする必要なさそうです。</p>\n\n<blockquote>\n<p>gatsby-remark-prismjsと一緒に使う場合は必ず後に定義してください。</p>\n</blockquote>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-emojis\" class=\"fragment\"></span><a href=\"#gatsby-remark-emojis\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-emojis\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-emojis</a>\n</h3>\n\n<p><strong>マークダウンで絵文字が使えるようにする</strong><br></p>\n\n<ul>\n<li>絵文字は画像ファイルではなく、base64形式で埋め込みます。全ての絵文字をドカッとインポートするわけではないのでデプロイ資産のサイズが最小限で済むのがメリットです。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">HTMLファイル中に埋め込まれる絵文字</span></div>\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;img</span>\n  <span class=\"na\">class=</span><span class=\"s\">\"emoji-icon\"</span>\n  <span class=\"na\">data-icon=</span><span class=\"s\">\"emoji-100\"</span>\n  <span class=\"na\">style=</span><span class=\"s\">\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\"</span>\n  <span class=\"na\">src=</span><span class=\"s\">\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAMMUlEQVR4Ae3YhXtcx90o4HfOnhVZlpntkMN0nTK3TsrMzPdjZmZmvh8zM5SZuQ04zInMsiVb0kq7e2jmPnBRj11t5HLy/gcz88Px4PaQhwRf5Q6xJQFTViAc9OWV2FVyVc6tq5hEZXlj0zylxxNKzkr0hng7/nMdo6OkQIFkGXnbl95mwn1c1mFvyWWBqxpuq/k13Oz0bOeyeZ5Z8eKaR9a0ARtyPpy4aophfBhdywj7fOGt5ZySrTUziQPoAwyxteDJJc+teXnBUAQEvnML78BQn5M4ArCGUHPhAt9d8LKS9RGBMjCVeMsovz3KD3cZrvkeTFlG3vWFs47xkkfP85zIwxpuj/wWbocxtvV4c8l39NgcgTrQCZzIaNW8MHFRw3vxz7CBrM+mgu/o8uqK1WgCdwf2tbg2510ZWY9rKhb6rDKAvOfMXUS2yLo+T6/4/YK1NVo8OvI23L6D8Q6vKPixPiNIgfnAvowbW3y2zTv7/Ejk+ZE7AXqM1Dx7kVfXrIaMycivXMff30WB9Houx9bIbM3orxKQOL38F52Zv6DVZUfJq0q+q8eaBIj0a9IjCEd4Rs3r+4xAoJPxlgV+LOPoBM0mth/hrJrViVHYSTbPtprvqhhPCFT4pxbveQT9R+AswmHaEYl2ZPhJg1zAk6zcq2iVnNfnG7t8Y8lYIgBSxoEhjvdZt8DVJVcAKuyb4+f6HELTwVb2JM5uCBkjEFnX4qXznJ/IkQKfyXgnDgNEVo9y1QIhUOU0Ocky8twZedI839Fjb814AgAEbsH0LC9oeFpFDoH7Mn43cv8QDUDFeYHNgdkWx6DDpoZXxv8nchr+YIHPIQKsZ0vimQ2txGgiRMvLo5V5Ga+e51t67ImsOsXh+yVvW82JeR5bcw4EOhmf6PG+EUoAmOfKhq2J+cjoYwn72F1wcSJDzHhn4LPj9ACgYSxxViIgS6Sjlpcf9cB8P5fO8aI5XlZyWUNuKZqMzzZcu55Lj3NJTRtwZ+IfRjhpiZK1kTbKRO8+zm7xmooRpECn4V8jBywRyRMTgGw1F7+Bu7Ho9ORvMJh15ImHH+fba66p2BoRaDLm0GpYAyga/jJw/yKvi1yaECgDtxR8whLnsesoayIC7YywwJaKpyWgCdzUsA89S+SUkWlA1mJ3xsiyF5AZTMFQ4vUFL60ZBtyaeG+L4cArGiBmHFvkExez4TiPaVgP2N/i42MsWIoGCTCacW6kU7ARUODtQ0w7hUATKAGpoQgky8gbg6lJiZPYH5hI3Jj4+1V8KOM5JV8PKPCREToFz6w5JwIxcH2bDziFjBMtOhENApdiy/97qTXvi3ScQs3amrMBqeTuPj3LyBcMZoh+4teHmKrZ2OMtuHYdj57juRUtwHzNPyZO9LkmsjWixULgpoK7ndpFGROAAltqzk1AHZhM7A/UlriMsaNcWLELAWWXyf+gbxn5PxhYwkn8LsBP0p7m4Q2PS0ATONjjhnMY6XBBZCwgcGiI+51GyeMj50VkzCXUnA2oA/cPUzmFDmdHri4ZRhOYyum+jGQZ+cusXM1ZFY8omIBAt8W+TfTa7K3ZFAGR2xtudgqbyDs8pWZ7RJteoFfTAnQi/xboOoVFzqt5RgKqFjePM2sA+biVK3gMHhuBhKmGt+Y0NY9NTECgjFzb5SZLnE2G3QXnR4YDArOJuQYQWFzk5i6VJR5Odow1NZsAZeBzgb4B5MHK9djdsDshY7bFuxven9FUXIhRCBxrc7BNbYlIhidENkQE6hbtwASgCUxH5kaIluKynGf1CICy4loUBpCXVuYcdkxxQU07AJMN/4xOzSpsSrQhcKTFcaewQNbieZHNgE7GIoYgULY4PE7hFGa5tOJJCUiBk13umaUygPyIldnOExJXNgjAzAL7YJiAjWj9PxcwY4kNtGseMcMVkREIHMw4FDkPkGE4d2oFGxu2A7oZn8uZ3kg0gHyjlVngUZHdCYF+xtQBClgHDCcCoMgoLFGRJ17YsDEhIPLhjLsjFwJakXEEANhJXvHoWa6pyQHTDX87TNeA8mEP3FlcfJQralYF4N7EO9s0kCylSFQAsJV2j0sWeGZiDAJTkY+1WahpQSJEhgtqAGiz6SQvq9gbESgDdxzlY/PUBpTf6YHbxEsjl0cgJm7t8Y4dVE5tKNACgFlW1XxdlwsTOeBDLfbl7EIDyLBuA/9tHSfaFInRBfYW7K1YCzgWeMduFpAMKL/K4NYQsHmWqyPbINAJ3D3GCQBAAMAliceM089oAqnDI0teWzMMGYcTb9nPPZsZTxwGBOwo+b45ZhKdjLU1j49cCIEC1y/wnwskg5MfM7hxQuA5BefUANyZ8SkAyEiJk9iBVs0VGd/S52osBpqG51WMA8rAf+R8cjfVRm6b5UMZeyMTibGCl9VoEJAAaHBrxr9+gANIBif8oMG9iaHI78zyipq1gSrxW9fzE+gDXM1w4rs7fGvDDgQkJABkgH7GtRXfPcnnkOBRXN7le3u8ODGODAAQUWTcE/jTm/lDFB6g8EcG81Syhp3z/GefPZGQcW2Ln8d/WGIVYxW/1OdlDRuQIwASInotPt3nJ2f5HAqAS2lVnF3yhj6vj2xAQEDKmM74eOLvT/JB9KxAeJvBXMhI4jtn+N6aTYGY+KVZfhWzTmEX6xPPqHh5zSMiGxPtQCfj9sB7Kv5ugftRWuJcWn3GF1nTZ11D3mZrw2xgZoSTLebQt0LhEwazitV4S4fHRYYC70z8/P/gE0hO4ycZX2RjwZqK8chIRtliZojjh5hBtIx9hDHCHoZmqFE7c8LfDRb+4Rg7e3ysYBcWEz+c8RdYNDi/Q0DyFSK83PJ+hXaXR83ynw0bMybxzXinM+c81k5QonuQx7U4F/2aNW3ua3PfOo7NcU6i3Ml9aJw5+T9Z3iRDOZdE8oTAVIt5K7CLbX1297m4oVWz5ijbJkmJ+RaPztiZKBLjOBw5eJSZwI5EdZybRvngBm5C1xnIj1texVDDJWhD5AZMWcZljMyys2BLl2012w9zduBS7Im0IusTrRpQIyEBAhdBCxHQ0K954hy/gfc7A+FTljfBxobfmeWFWEh8W8Vb0QOAKwld1lVsX2RLwzkZD09cUnNpzeYGEQnBaaVAjQBIaLCAk4HhRBH55U/z50hWKP+I5T2bVmIDQotPRG4dpgcAZ5PPsLPi+XhazeNK1tdIlpIySpTI0EGT6GMxcDLQQQCkQA+TQ9ycMVFzuMdnEc7oAgygZihyMVoZ+07zN7+m4SUL/GJFjgCAGiXKQC8wHTja4giG8NkW8wX3d7i7y3Sg2EwEQIJEQkAaJT3ZmcmfbHkZDaaxYYGPTzFtia2kSF3TABrEQDdjMnBTxh2RW6a5bgOziAhokBATsSQhHXBayRdIfq/lXUkv8IEWWWDm72ks8WRmI+8Z5dkl3RY3N0wW3Bo4MMxioApU91HcR/LlJ/y25T2bdsVli7yx4Tew3ykM08bOPrFNt6Y4SQ+VZVzCeEZ7DfOzjGPoLGYOMYYFgMTqnSwiOnNCMpi7GeqwM3AIhRXaQ+sgOyq2VuwNzCVGKi7qsjMxhKGGLKNAnugOcxCrarY0yJka4a5hPrmGT2PeCoQpXzwl2xLbe+zpc2XF+P/u/ZgI7E70kWN9wwQkJAQAZHQxlMgTAiljGpOBD67mb3CTByjc4gvjUlqHuKhmU5eLFtmOsxMbcWHi/EiWEJGQAAkQfH4B6GacwGxiBE3G+0b4A9ziAcoLK7ObdoftfXb12HoDuxJXYWvkipqtEc3nP2AM1IEmsIATWIgcQxMYbzgYqCHQD8zkTGVMR4YTZeSmD3OnFQi/aXAvJU9s6rG54OLEoxJX1VzcsK06zZQXKNELdBIFmsi9gZOBMqPb4jgOtJgpuKumGmPD9dxUUEACyi95F4BnkWNPyTMbHlfyiJJNjaXUgQL9xFxgJnAw52hgMnEiUNzDW2boRaDwZZIbUGQ48S3zvLRmNQAiKvQxnzGZcTjjvsinulw/x5GlX+a7Sbt9+YVPG8wqxvBzc7y2YQIlqoy5wF2BT0c+vMjnxilzYkOzSET0FSq812C2ESLrSn6sZqLPO/vcntPP6QzTayhQ+ioSPuaBGWNLRdZl7pP0EX0VC7/gwS3zIPfQBTx0AQ9yD12AB7mHLsCD3EMX4EHufwJIOEs9kLQJngAAAABJRU5ErkJggg==\"</span>\n<span class=\"nt\">&gt;</span>\n</pre></div>\n</div>\n\n<ul>\n<li>(注意点）コードブロック中の記述も絵文字に変換しようとするので気をつけてください。</li>\n</ul>\n\n<h4>\n<span id=\"設定-3\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-3\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p>オプションで色々指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-remark-emojis'</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"c1\">// falseにすると絵文字機能をオフにできます</span>\n              <span class=\"na\">active</span> <span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n              <span class=\"c1\">// サイズは16, 24, 32, 64から選べます</span>\n              <span class=\"na\">size</span>   <span class=\"p\">:</span> <span class=\"mi\">64</span><span class=\"p\">,</span>\n              <span class=\"c1\">// 独自クラスを追加できます</span>\n              <span class=\"na\">class</span>  <span class=\"p\">:</span> <span class=\"s1\">'emoji-icon'</span><span class=\"p\">,</span>\n              <span class=\"c1\">// 独自スタイルを追加できます</span>\n              <span class=\"na\">styles</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"na\">display</span>      <span class=\"p\">:</span> <span class=\"s1\">'inline'</span><span class=\"p\">,</span>\n                <span class=\"na\">margin</span>       <span class=\"p\">:</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'margin-top'</span> <span class=\"p\">:</span> <span class=\"s1\">'1px'</span><span class=\"p\">,</span>\n                <span class=\"na\">position</span>     <span class=\"p\">:</span> <span class=\"s1\">'relative'</span><span class=\"p\">,</span>\n                <span class=\"na\">top</span>          <span class=\"p\">:</span> <span class=\"s1\">'5px'</span><span class=\"p\">,</span>\n                <span class=\"na\">width</span>        <span class=\"p\">:</span> <span class=\"s1\">'25px'</span>\n              <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-2\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-2\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>マークダウンにて<code>:XXX:</code>のような形式で記述します。<br>\n例 <img alt=\":100:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f4af.png\" title=\":100:\" width=\"20\"></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-graphviz\" class=\"fragment\"></span><a href=\"#gatsby-remark-graphviz\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-graphviz\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-graphviz</a>\n</h3>\n\n<p><strong>マークダウンで<a href=\"https://www.graphviz.org/\" rel=\"nofollow noopener\" target=\"_blank\">Graphviz</a>(dot言語で記述されたグラフ構造を任意のフォーマットの画像ファイルへ出力するツール)を使えるようにする</strong><br></p>\n\n<ul>\n<li>内部的には<a href=\"https://github.com/mdaines/viz.js/\" rel=\"nofollow noopener\" target=\"_blank\">viz.js</a>でコードブロックをSVGファイルに変換しています。</li>\n</ul>\n\n<h4>\n<span id=\"設定-4\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-4\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p><code>gatsby-remark-prismjs</code>のようなコードブロックを編集するプラグインより先に定義してください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-transformer-remark'</span><span class=\"p\">,</span>\n    <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'gatsby-remark-graphviz'</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">],</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-3\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-3\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>マークダウンで下記のように言語を<code>dot</code>としてコードブロックを記述します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n```dot\ndigraph graphname {\n  a -&gt; b;\n  b -&gt; c;\n  a -&gt; c;\n}\n```\n</pre></div></div>\n\n<p>すると下記のように表示されます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/a2b30c9c36ba82e0bbc0728ee541daa180c30f07/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f34363931373735662d343735302d383263312d306664312d6638623932343032623139662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/a2b30c9c36ba82e0bbc0728ee541daa180c30f07/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f34363931373735662d343735302d383263312d306664312d6638623932343032623139662e706e67\" alt=\"スクリーンショット 2018-10-22 23.26.08.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/4691775f-4750-82c1-0fd1-f8b92402b19f.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-katex\" class=\"fragment\"></span><a href=\"#gatsby-remark-katex\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-katex\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-katex</a>\n</h3>\n\n<p><strong>マークダウンで数式が使えるようにする</strong><br></p>\n\n<h4>\n<span id=\"設定-5\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-5\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-transformer-remark'</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">`gatsby-remark-katex`</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n</pre></div>\n</div>\n\n<p><br><br>\n追加でCSSをテンプレートで読み込んでください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">テンプレート</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"s1\">'katex/dist/katex.min.css'</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-4\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-4\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>方程式を '$'で囲みます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$\nf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\n$\n</pre></div></div>\n\n<p>すると下記のように表示されます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/b3424fcce7aadcffa5675ed4a549f65fbd639dca/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37626364643737352d313633332d623835372d303963622d3338626632393238363663362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/b3424fcce7aadcffa5675ed4a549f65fbd639dca/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37626364643737352d313633332d623835372d303963622d3338626632393238363663362e706e67\" alt=\"スクリーンショット 2018-10-22 23.29.41.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/7bcdd775-1633-b857-09cb-38bf292866c6.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-embed-snippet\" class=\"fragment\"></span><a href=\"#gatsby-remark-embed-snippet\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-embed-snippet\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-embed-snippet</a>\n</h3>\n\n<p><strong>マークダウンでJavaSriptファイルなどを読み込んでコードブロックに埋め込む</strong><br></p>\n\n<h4>\n<span id=\"設定-6\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-6\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p><code>directory</code>は読み込み対象資産のフォルダを指定します。<br><br>\n必ず<code>gatsby-remark-prismjs</code>より前に指定してください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">\"gatsby-remark-embed-snippet\"</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">classPrefix</span><span class=\"p\">:</span> <span class=\"s2\">\"language-\"</span><span class=\"p\">,</span>\n              <span class=\"na\">directory</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">__dirname</span><span class=\"p\">}</span><span class=\"s2\">/examples/`</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-prismjs`</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">classPrefix</span><span class=\"p\">:</span> <span class=\"s2\">\"language-\"</span><span class=\"p\">,</span>\n              <span class=\"na\">inlineCodeMarker</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n              <span class=\"na\">aliases</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n              <span class=\"na\">showLineNumbers</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-5\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-5\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>マークダウンで`embed:設定で指定したディレクトリからの相対パス`のように指定します。<br>\n指定行を強調したい場合は、読み込み対象ファイルにコメントで記述します。</p>\n\n<h4>\n<span id=\"javascriptファイルの場合\" class=\"fragment\"></span><a href=\"#javascript%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>JavaScriptファイルの場合</h4>\n\n<h5>\n<span id=\"読み込み対象ファイル\" class=\"fragment\"></span><a href=\"#%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%AF%BE%E8%B1%A1%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\"><i class=\"fa fa-link\"></i></a>読み込み対象ファイル</h5>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">examples/2018/10/21/sample.js</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"s2\">\"react\"</span>\n<span class=\"k\">import</span> <span class=\"nx\">ReactDOM</span> <span class=\"k\">from</span> <span class=\"s2\">\"react-dom\"</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Brian\"</span>\n\n<span class=\"c1\">// highlight-range{2-3}</span>\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n  <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"nx\">Hello</span><span class=\"p\">,</span> <span class=\"nx\">$</span><span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"p\">}</span><span class=\"o\">!&lt;</span><span class=\"sr\">/h1&gt;&lt;/</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">\"root\"</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n</pre></div>\n</div>\n\n<h5>\n<span id=\"マークダウン記述\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E8%A8%98%E8%BF%B0\"><i class=\"fa fa-link\"></i></a>マークダウン記述</h5>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n`embed:2018/10/21/sample.js`\n</pre></div></div>\n\n<h5>\n<span id=\"表示結果\" class=\"fragment\"></span><a href=\"#%E8%A1%A8%E7%A4%BA%E7%B5%90%E6%9E%9C\"><i class=\"fa fa-link\"></i></a>表示結果</h5>\n\n<p><a href=\"https://camo.qiitausercontent.com/3486057ab9d26988c899775bc9321081cd52bf7f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f38316131383861352d376161352d333766372d336563652d3336663130303136386630372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/3486057ab9d26988c899775bc9321081cd52bf7f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f38316131383861352d376161352d333766372d336563652d3336663130303136386630372e706e67\" alt=\"スクリーンショット 2018-10-22 23.31.18.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/81a188a5-7aa5-37f7-3ece-36f100168f07.png\"></a></p>\n\n<h4>\n<span id=\"cssファイルの場合\" class=\"fragment\"></span><a href=\"#css%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>CSSファイルの場合</h4>\n\n<h5>\n<span id=\"読み込み対象ファイル-1\" class=\"fragment\"></span><a href=\"#%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%AF%BE%E8%B1%A1%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB-1\"><i class=\"fa fa-link\"></i></a>読み込み対象ファイル</h5>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">examples/2018/10/21/sample.css</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">html</span> <span class=\"p\">{</span>\n  <span class=\"cm\">/* highlight-range{1-2} */</span>\n  <span class=\"nl\">height</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">;</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">*</span> <span class=\"p\">{</span>\n  <span class=\"nx\">box</span><span class=\"o\">-</span><span class=\"na\">sizing</span><span class=\"p\">:</span> <span class=\"nx\">border</span><span class=\"o\">-</span><span class=\"nx\">box</span><span class=\"p\">;</span> <span class=\"cm\">/* highlight-line */</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<h5>\n<span id=\"マークダウン記述-1\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E8%A8%98%E8%BF%B0-1\"><i class=\"fa fa-link\"></i></a>マークダウン記述</h5>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n`embed:2018/10/21/sample.css`\n</pre></div></div>\n\n<h5>\n<span id=\"表示結果-1\" class=\"fragment\"></span><a href=\"#%E8%A1%A8%E7%A4%BA%E7%B5%90%E6%9E%9C-1\"><i class=\"fa fa-link\"></i></a>表示結果</h5>\n\n<p><a href=\"https://camo.qiitausercontent.com/a51f4e283b1a709b07e92ee2f3ca454126dddea7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35653664393538392d366166632d633761312d653435382d3362323439623861303737362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/a51f4e283b1a709b07e92ee2f3ca454126dddea7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35653664393538392d366166632d633761312d653435382d3362323439623861303737362e706e67\" alt=\"スクリーンショット 2018-10-22 23.31.26.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/5e6d9589-6afc-c7a1-e458-3b249b8a0776.png\"></a></p>\n\n<h4>\n<span id=\"htmlファイルの場合\" class=\"fragment\"></span><a href=\"#html%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>HTMLファイルの場合</h4>\n\n<h5>\n<span id=\"読み込み対象ファイル-2\" class=\"fragment\"></span><a href=\"#%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%AF%BE%E8%B1%A1%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB-2\"><i class=\"fa fa-link\"></i></a>読み込み対象ファイル</h5>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">examples/2018/10/21/sample.html</span></div>\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1&gt;</span>highlight me<span class=\"nt\">&lt;/h1&gt;</span> <span class=\"c\">&lt;!-- highlight-line --&gt;</span>\n    <span class=\"nt\">&lt;p&gt;</span>\n      <span class=\"c\">&lt;!-- highlight-next-line --&gt;</span>\n      And me\n    <span class=\"nt\">&lt;/p&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre></div>\n</div>\n\n<h5>\n<span id=\"マークダウン記述-2\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E8%A8%98%E8%BF%B0-2\"><i class=\"fa fa-link\"></i></a>マークダウン記述</h5>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n`embed:2018/10/21/sample.html`\n</pre></div></div>\n\n<h5>\n<span id=\"表示結果-2\" class=\"fragment\"></span><a href=\"#%E8%A1%A8%E7%A4%BA%E7%B5%90%E6%9E%9C-2\"><i class=\"fa fa-link\"></i></a>表示結果</h5>\n\n<p><a href=\"https://camo.qiitausercontent.com/2515a8804b1cf6e4e8913ee61154356d7f59ce0d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f39313761623834642d633130382d663466382d326661362d3432663931303032626633632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/2515a8804b1cf6e4e8913ee61154356d7f59ce0d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f39313761623834642d633130382d663466382d326661362d3432663931303032626633632e706e67\" alt=\"スクリーンショット 2018-10-22 23.31.35.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/917ab84d-c108-f4f8-2fa6-42f91002bf3c.png\"></a></p>\n\n<h4>\n<span id=\"yamlの場合\" class=\"fragment\"></span><a href=\"#yaml%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>YAMLの場合</h4>\n\n<h5>\n<span id=\"読み込み対象ファイル-3\" class=\"fragment\"></span><a href=\"#%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%AF%BE%E8%B1%A1%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB-3\"><i class=\"fa fa-link\"></i></a>読み込み対象ファイル</h5>\n\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">examples/2018/10/21/sample.yaml</span></div>\n<div class=\"highlight\"><pre><span class=\"na\">foo</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">highlighted\"</span> <span class=\"c1\"># highlight-line</span>\n<span class=\"na\">bar</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">not</span><span class=\"nv\"> </span><span class=\"s\">highlighted\"</span>\n<span class=\"c1\"># highlight-range{1-2}</span>\n<span class=\"na\">baz</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">highlighted\"</span>\n<span class=\"na\">quz</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">highlighted\"</span>\n</pre></div>\n</div>\n\n<h5>\n<span id=\"マークダウン記述-3\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E8%A8%98%E8%BF%B0-3\"><i class=\"fa fa-link\"></i></a>マークダウン記述</h5>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\n`embed:2018/10/21/sample.yaml`\n</pre></div></div>\n\n<h5>\n<span id=\"表示結果-3\" class=\"fragment\"></span><a href=\"#%E8%A1%A8%E7%A4%BA%E7%B5%90%E6%9E%9C-3\"><i class=\"fa fa-link\"></i></a>表示結果</h5>\n\n<p><a href=\"https://camo.qiitausercontent.com/1daa769151a85e6c6800f7c02ecd3051387eaf5d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63633830613530352d653633652d663862322d313833352d3465646664643832643339622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/1daa769151a85e6c6800f7c02ecd3051387eaf5d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63633830613530352d653633652d663862322d313833352d3465646664643832643339622e706e67\" alt=\"スクリーンショット 2018-10-22 23.31.44.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/cc80a505-e63e-f8b2-1835-4edfdd82d39b.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-copy-linked-files\" class=\"fragment\"></span><a href=\"#gatsby-remark-copy-linked-files\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-copy-linked-files\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-copy-linked-files</a>\n</h3>\n\n<p><strong>マークダウンのリンクや画像で使われているPDFや動画などをビルド時にpublicフォルダにコピーする</strong></p>\n\n<h4>\n<span id=\"設定-7\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-7\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"gatsby-remark-copy-linked-files\"</span><span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br><br>\nコピー先をpublic以外にしたい場合はオプションを指定します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-remark-copy-linked-files'</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">destinationDir</span><span class=\"p\">:</span> <span class=\"s1\">'path/to/dir'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>コピー対象外ファイル指定することもできます。その場合は<code>ignoreFileExtensions</code>を設定します。<br>\nこのプロパティは<code>[\"png\", \"jpg\", \"jpeg\", \"bmp\", \"tiff\"]</code>がデフォルトです。<br>\nというのも、これらのファイルはgatsby-remark-imagesを使って自動的にレスポンシブな画像が生成されることを前提にしているからです。<br>\nもしgatsby-remark-imagesを使わずにpublicファイルへの単純コピーにしたい場合は下記のようにします。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">\"gatsby-remark-copy-linked-files\"</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">ignoreFileExtensions</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-images\" class=\"fragment\"></span><a href=\"#gatsby-remark-images\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-images\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-images</a>\n</h3>\n\n<p><strong>マークダウンで画像をスマートに表示できるようにする</strong><br></p>\n\n<ul>\n<li>画像ロード後にレイアウトがガタっとずれないように、画像の大きさ分の空要素を確保しておく</li>\n<li>ブラウザ幅別に画像を生成し<code>img</code>タグの<code>srcset</code>属性と<code>sizes</code>属性を設定します</li>\n<li>画像を20px幅に小さくしたものを、画像ロード中にプレースホルダーとして表示します。これはMediumとFacebookで使われているテクニックです。</li>\n</ul>\n\n<h4>\n<span id=\"設定使い方\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p><code>gatsby-remark-images</code>、<code>gatsby-plugin-sharp</code>とあわせて使いましょう。<br>\nオプションに指定したmaxWidthにあわせて、プラグインがいい感じの色々サイズの画像を複数生成してくれます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">`gatsby-plugin-sharp`</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-transformer-remark`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-remark-images`</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">maxWidth</span><span class=\"p\">:</span> <span class=\"mi\">590</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-responsive-iframe\" class=\"fragment\"></span><a href=\"#gatsby-remark-responsive-iframe\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-responsive-iframe\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-responsive-iframe</a>\n</h3>\n\n<p><strong>マークダウンでiframeタグを縦横比固定でレスポンシブにする</strong></p>\n\n<h4>\n<span id=\"使い方-6\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-6\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p><code>gatsby-config.js</code>の設定は特に変わったところはありません。<br>\nただし縦横比を明確にするためマークダウン中のiframeにはwidthとheigth属性を必ず指定してください。</p>\n\n<div class=\"code-frame\" data-lang=\"markdown\">\n<div class=\"code-lang\"><span class=\"bold\">マークダウンサンプル</span></div>\n<div class=\"highlight\"><pre>This is a beautiful iframe:\n\n<span class=\"nt\">&lt;iframe</span> <span class=\"na\">url=</span><span class=\"s\">\"http://www.example.com/\"</span> <span class=\"na\">width=</span><span class=\"s\">\"600\"</span> <span class=\"na\">height=</span><span class=\"s\">\"400\"</span><span class=\"nt\">&gt;&lt;/iframe&gt;</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-remark-embed-youtube\" class=\"fragment\"></span><a href=\"#gatsby-remark-embed-youtube\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-embed-youtube\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-remark-embed-youtube</a>\n</h3>\n\n<p><strong>マークダウンでYoutubeを埋め込めるようにする</strong></p>\n\n<h4>\n<span id=\"設定-8\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-8\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p>オプションに高さと幅を指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">\"gatsby-transformer-remark\"</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">\"gatsby-remark-embed-youtube\"</span><span class=\"p\">,</span>\n            <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"mi\">800</span><span class=\"p\">,</span>\n              <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"mi\">400</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>一注意があって、<code>gatsby-remark-responsive-iframe</code>をあわせて使う場合は必ずその前に定義してください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>        <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">\"gatsby-remark-embed-youtube\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"gatsby-remark-responsive-iframe\"</span>\n        <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-7\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-7\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>マークダウンで下記のように記載します。URLの最後(embed/2Xc9gXyf2G4)は動画のIDです。</p>\n\n<div class=\"code-frame\" data-lang=\"markdown\">\n<div class=\"code-lang\"><span class=\"bold\">マークダウンサンプル</span></div>\n<div class=\"highlight\"><pre><span class=\"gh\"># Look at this Video:</span>\n\n<span class=\"sb\">`youtube:https://www.youtube.com/embed/2Xc9gXyf2G4`</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/bdf5225f67f4609dd5da770513fd53e2de4e9bc5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f30613937336438662d323234652d633433322d613539612d6462636431373063393965662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/bdf5225f67f4609dd5da770513fd53e2de4e9bc5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f30613937336438662d323234652d633433322d613539612d6462636431373063393965662e706e67\" alt=\"スクリーンショット 2018-10-22 23.37.20.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/0a973d8f-224e-c432-a59a-dbcd170c99ef.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-twitter\" class=\"fragment\"></span><a href=\"#gatsby-plugin-twitter\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-twitter\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-twitter</a>\n</h3>\n\n<p><strong>マークダウンでTwitterの埋め込み用スクリプトを記述できるようにする</strong><br></p>\n\n<p>こちらのプラグインもう少しスマートになってほしいです（ちょっとめんどくさいです）。<br>\n使い方は<a href=\"https://takumon.com/2018/10/07/#twitter\" rel=\"nofollow noopener\" target=\"_blank\">GatsbyでYouTubeとTwitter埋め込み | Takumon Blog</a>を参照してください。</p>\n\n<h4>\n<span id=\"使い方-8\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-8\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>マークダウンには下記のように記載します。</p>\n\n<div class=\"code-frame\" data-lang=\"html\"><div class=\"highlight\"><pre><span class=\"nt\">&lt;blockquote</span> <span class=\"na\">class=</span><span class=\"s\">\"twitter-tweet\"</span> <span class=\"na\">data-lang=</span><span class=\"s\">\"ja\"</span><span class=\"nt\">&gt;&lt;p</span> <span class=\"na\">lang=</span><span class=\"s\">\"ja\"</span> <span class=\"na\">dir=</span><span class=\"s\">\"ltr\"</span><span class=\"nt\">&gt;</span>最近忙しかったのでアレですが、ブログ更新しました。<span class=\"nt\">&lt;br&gt;&lt;br&gt;</span>Reactで構造化データマークアップ（JSON-LD対応） <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://t.co/7V49VqH9WI\"</span><span class=\"nt\">&gt;</span>https://t.co/7V49VqH9WI<span class=\"nt\">&lt;/a&gt;</span> <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/inouetakumon?ref_src=twsrc%5Etfw\"</span><span class=\"nt\">&gt;</span>@inouetakumon<span class=\"nt\">&lt;/a&gt;</span>さんから<span class=\"nt\">&lt;/p&gt;</span><span class=\"ni\">&amp;mdash;</span> takumontakumon (@inouetakumon) <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/inouetakumon/status/1046062825037344770?ref_src=twsrc%5Etfw\"</span><span class=\"nt\">&gt;</span>2018年9月29日<span class=\"nt\">&lt;/a&gt;&lt;/blockquote&gt;</span>\n</pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>表示結果</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/e37c0ae7a0ae7fde08f8930aeac32399ffbe8a07/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64646632623963322d626537652d656166322d333139342d6464306633343663346561302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/e37c0ae7a0ae7fde08f8930aeac32399ffbe8a07/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64646632623963322d626537652d656166322d333139342d6464306633343663346561302e706e67\" alt=\"スクリーンショット 2018-10-22 23.37.27.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/ddf2b9c2-be7e-eaf2-3194-dd0f346c4ea0.png\"></a></p>\n\n<h2>\n<span id=\"seo系\" class=\"fragment\"></span><a href=\"#seo%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>SEO系</h2>\n\n<h3>\n<span id=\"gatsby-plugin-react-helmet\" class=\"fragment\"></span><a href=\"#gatsby-plugin-react-helmet\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-react-helmet\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-react-helmet</a>\n</h3>\n\n<p><strong>React HelmetをGatsbyビルド時使えるようにする</strong><br></p>\n\n<ul>\n<li>実用例は過去記事<a href=\"https://takumon.com/09/29\" rel=\"nofollow noopener\" target=\"_blank\">Reactで構造化データマークアップ（JSON-LD対応)</a>を参照してください。</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-offline\" class=\"fragment\"></span><a href=\"#gatsby-plugin-offline\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-offline\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-offline</a>\n</h3>\n\n<p><strong>低速ネットワーク環境やオフライン環境でもWebサイトをスムーズに見れるようにする</strong><br></p>\n\n<ul>\n<li>ビルド時にサービスワーカーを生成してくれます。</li>\n<li>\n<code>gatsby-plugin-manifest</code>との併用推奨です。</li>\n<li>このプラグインは<a href=\"https://developers.google.com/web/tools/workbox/modules/workbox-build\" rel=\"nofollow noopener\" target=\"_blank\">Workbox</a>の設定を従っており、必要に応じて<code>gatsby-config.js</code>で上書くという感じです。Workboxは宣言的な記述だけで最適なServiceWorkerのコードが生成できるライブラリで、下記にわかりやすく書かれていました。\n\n<ul>\n<li>参考：<a href=\"https://qiita.com/nazonohito51/items/32b61cabdac8b24769bd\" id=\"reference-bbd2f54e9203f459a89c\">ServiceWorkerを簡単に書けるworkbox-swの使い方 | Qiita</a>\n</li>\n</ul>\n</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-manifest\" class=\"fragment\"></span><a href=\"#gatsby-plugin-manifest\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-manifest\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-manifest</a>\n</h3>\n\n<p><strong>アプリをPWA対応にする（manifest.webmanifestを生成する）</strong><br></p>\n\n<ul>\n<li>サイトに<code>manifest.webmanifest</code>を配置することで、スマホでブログを見たときに、ネイティブアプリのようなUXを実現できます。</li>\n<li>\n<code>gatsby-plugin-offline</code>との併用推奨です。</li>\n<li>詳細は<a href=\"https://takumon.com/2018/10/08/#gatsby-plugin-manifest%E3%81%AE%E8%A8%AD%E5%AE%9A\" rel=\"nofollow noopener\" target=\"_blank\">GatsbyでPWA対応 |Takumon Blog</a>を参照してください。</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-sitemap\" class=\"fragment\"></span><a href=\"#gatsby-plugin-sitemap\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sitemap\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-sitemap</a>\n</h3>\n\n<p><strong>サイトマップを生成する</strong><br></p>\n\n<h4>\n<span id=\"設定使い方-1\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-1\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>プラグインで<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-plugin-sitemap/src/internals.js#L34\" rel=\"nofollow noopener\" target=\"_blank\">いい感じの設定</a>があらかじめされているので、最低限設定するならsiteUrlを指定するだけです。個別にオプションを設定する場合は、<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-plugin-sitemap/src/internals.js#L34\" rel=\"nofollow noopener\" target=\"_blank\">いい感じの設定</a>を参考にしましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">siteMetadata</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nl\">siteUrl</span><span class=\"p\">:</span> <span class=\"s2\">`https://www.example.com`</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">`gatsby-plugin-sitemap`</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>これだけで下記のようなサイトマップが生成できます。</p>\n\n<div class=\"code-frame\" data-lang=\"xml\"><div class=\"highlight\"><pre><span class=\"nt\">&lt;urlset</span>\n  <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.sitemaps.org/schemas/sitemap/0.9\"</span>\n  <span class=\"na\">xmlns:news=</span><span class=\"s\">\"http://www.google.com/schemas/sitemap-news/0.9\"</span>\n  <span class=\"na\">xmlns:xhtml=</span><span class=\"s\">\"http://www.w3.org/1999/xhtml\"</span>\n  <span class=\"na\">xmlns:mobile=</span><span class=\"s\">\"http://www.google.com/schemas/sitemap-mobile/1.0\"</span>\n  <span class=\"na\">xmlns:image=</span><span class=\"s\">\"http://www.google.com/schemas/sitemap-image/1.1\"</span>\n  <span class=\"na\">xmlns:video=</span><span class=\"s\">\"http://www.google.com/schemas/sitemap-video/1.1\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;url&gt;</span>\n    <span class=\"nt\">&lt;loc&gt;</span>https://takumon.com//2018/10/14/<span class=\"nt\">&lt;/loc&gt;</span>\n    <span class=\"nt\">&lt;changefreq&gt;</span>daily<span class=\"nt\">&lt;/changefreq&gt;</span>\n    <span class=\"nt\">&lt;priority&gt;</span>0.7<span class=\"nt\">&lt;/priority&gt;</span>\n  <span class=\"nt\">&lt;/url&gt;</span>\n  <span class=\"nt\">&lt;url&gt;</span>\n    <span class=\"nt\">&lt;loc&gt;</span>https://takumon.com//2018/10/12/<span class=\"nt\">&lt;/loc&gt;</span>\n    <span class=\"nt\">&lt;changefreq&gt;</span>daily<span class=\"nt\">&lt;/changefreq&gt;</span>\n    <span class=\"nt\">&lt;priority&gt;</span>0.7<span class=\"nt\">&lt;/priority&gt;</span>\n  <span class=\"nt\">&lt;/url&gt;</span>\n  <span class=\"nt\">&lt;url&gt;</span>\n    <span class=\"nt\">&lt;loc&gt;</span>https://takumon.com//2018/10/08/<span class=\"nt\">&lt;/loc&gt;</span>\n    <span class=\"nt\">&lt;changefreq&gt;</span>daily<span class=\"nt\">&lt;/changefreq&gt;</span>\n    <span class=\"nt\">&lt;priority&gt;</span>0.7<span class=\"nt\">&lt;/priority&gt;</span>\n  <span class=\"nt\">&lt;/url&gt;</span>\n  <span class=\"c\">&lt;!-- ・・・ --&gt;</span>\n  <span class=\"c\">&lt;!-- Webサイト上の全てのURL定義 --&gt;</span>\n  <span class=\"c\">&lt;!-- ・・・ --&gt;</span>\n<span class=\"nt\">&lt;/urlset&gt;</span>\n</pre></div></div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-canonical-urls\" class=\"fragment\"></span><a href=\"#gatsby-plugin-canonical-urls\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-canonical-urls\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-canonical-urls</a>\n</h3>\n\n<p><strong>canonical linksを追加する</strong><br><br>\n* canonical linksは検索エンジンに対して、プロコトルが違ったりクエリストリングがついていても同一のサイトのURLだということを宣言するためのリンクです。</p>\n\n<h4>\n<span id=\"設定使い方-2\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-2\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>オプションとしてsiteUrlを指定します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-canonical-urls`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">siteUrl</span><span class=\"p\">:</span> <span class=\"s2\">`https://www.example.com`</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br><br>\nすると下記リンクタグがHTML内に埋め込まれます。</p>\n\n<div class=\"code-frame\" data-lang=\"html\"><div class=\"highlight\"><pre><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"canonical\"</span> <span class=\"na\">href=</span><span class=\"s\">\"http://www.example.com/about-us/\"</span> <span class=\"nt\">/&gt;</span>\n</pre></div></div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-feed\" class=\"fragment\"></span><a href=\"#gatsby-plugin-feed\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-feed\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-feed</a>\n</h3>\n\n<p><strong>RSSフィードを作る</strong></p>\n\n<h4>\n<span id=\"設定-9\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-9\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<p><code>gatsby-config.js</code>でsiteMetadataを設定しプラグインを定義するだけでOKです。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">siteMetadata</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nl\">title</span><span class=\"p\">:</span> <span class=\"s2\">`GatsbyJS`</span><span class=\"p\">,</span>\n    <span class=\"nx\">description</span><span class=\"p\">:</span> <span class=\"s2\">`Blazing fast modern site generator for React`</span><span class=\"p\">,</span>\n    <span class=\"nx\">siteUrl</span><span class=\"p\">:</span> <span class=\"s2\">`https://www.gatsbyjs.org`</span>\n  <span class=\"p\">},</span>\n  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-feed`</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br><br>\nこのプラグインを使うと、ビルドでpublic配下にrss.xmlが生成されます。<br>\n自分の場合はFeedlyの登録ボタンと、rss.xmlへのリンクをブログのトップに設けています。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/bcafb7ebbe215d5b7bfd9cd3044c8eaee099e6ec/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37383238636236322d653366642d386364382d656235392d3961346437373231356133342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/bcafb7ebbe215d5b7bfd9cd3044c8eaee099e6ec/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37383238636236322d653366642d386364382d656235392d3961346437373231356133342e706e67\" alt=\"rssfeed.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/7828cb62-e3fd-8cd8-eb59-9a4d77215a34.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-robots-txt\" class=\"fragment\"></span><a href=\"#gatsby-plugin-robots-txt\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-robots-txt\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-robots-txt</a>\n</h3>\n\n<p><strong><code>robots.txt</code>を生成する</strong><br></p>\n\n<ul>\n<li>robots.txtは検索エンジンのクロールを最適化するためのテキストファイルです。SEO対策に使われます。</li>\n</ul>\n\n<h4>\n<span id=\"設定使い方-3\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-3\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>オプションでホストURLやサイトマップを指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-plugin-robots-txt'</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">host</span><span class=\"p\">:</span> <span class=\"s1\">'https://www.example.com'</span><span class=\"p\">,</span>\n        <span class=\"na\">sitemap</span><span class=\"p\">:</span> <span class=\"s1\">'https://www.example.com/sitemap.xml'</span><span class=\"p\">,</span>\n        <span class=\"na\">policy</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"na\">userAgent</span><span class=\"p\">:</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"na\">allow</span><span class=\"p\">:</span> <span class=\"s1\">'/'</span> <span class=\"p\">}]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>Netlfyで<a href=\"https://www.netlify.com/blog/2016/07/20/introducing-deploy-previews-in-netlify/\" rel=\"nofollow noopener\" target=\"_blank\">Deploy Preview機能</a>を使うなら下記のような設定にします。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"kd\">const</span> <span class=\"p\">{</span>\n  <span class=\"nx\">NODE_ENV</span><span class=\"p\">,</span>\n  <span class=\"na\">URL</span><span class=\"p\">:</span> <span class=\"nx\">NETLIFY_SITE_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'https://www.example.com'</span><span class=\"p\">,</span>\n  <span class=\"na\">DEPLOY_PRIME_URL</span><span class=\"p\">:</span> <span class=\"nx\">NETLIFY_DEPLOY_URL</span> <span class=\"o\">=</span> <span class=\"nx\">NETLIFY_SITE_URL</span><span class=\"p\">,</span>\n  <span class=\"na\">CONTEXT</span><span class=\"p\">:</span> <span class=\"nx\">NETLIFY_ENV</span> <span class=\"o\">=</span> <span class=\"nx\">NODE_ENV</span>\n<span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">isNetlifyProduction</span> <span class=\"o\">=</span> <span class=\"nx\">NETLIFY_ENV</span> <span class=\"o\">===</span> <span class=\"s1\">'production'</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">siteUrl</span> <span class=\"o\">=</span> <span class=\"nx\">isNetlifyProduction</span> <span class=\"p\">?</span> <span class=\"nx\">NETLIFY_SITE_URL</span> <span class=\"p\">:</span> <span class=\"nx\">NETLIFY_DEPLOY_URL</span><span class=\"p\">;</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">siteMetadata</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">siteUrl</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby-plugin-robots-txt'</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">resolveEnv</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">NETLIFY_ENV</span><span class=\"p\">,</span>\n        <span class=\"na\">env</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"na\">production</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">policy</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"na\">userAgent</span><span class=\"p\">:</span> <span class=\"s1\">'*'</span> <span class=\"p\">}]</span>\n          <span class=\"p\">},</span>\n          <span class=\"s1\">'branch-deploy'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">policy</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"na\">userAgent</span><span class=\"p\">:</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"na\">disallow</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'/'</span><span class=\"p\">]</span> <span class=\"p\">}],</span>\n            <span class=\"na\">sitemap</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"na\">host</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n          <span class=\"p\">},</span>\n          <span class=\"s1\">'deploy-preview'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">policy</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"na\">userAgent</span><span class=\"p\">:</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"na\">disallow</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'/'</span><span class=\"p\">]</span> <span class=\"p\">}],</span>\n            <span class=\"na\">sitemap</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"na\">host</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>オプションを指定しない場合は、siteMetadataにsiteUrlを指定します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">siteMetadata</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">siteUrl</span><span class=\"p\">:</span> <span class=\"s1\">'https://www.example.com'</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'gatsby-plugin-robots-txt'</span><span class=\"p\">]</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>ビルドするとpublicフォルダ配下に<code>robot.txt</code>が生成されます。</p>\n\n<div class=\"code-frame\" data-lang=\"txt\">\n<div class=\"code-lang\"><span class=\"bold\">robot.txtの例</span></div>\n<div class=\"highlight\"><pre>User-agent: *\nDisallow:\nSitemap: https://takumon.com/sitemap.xml\n</pre></div>\n</div>\n\n<h2>\n<span id=\"開補補助系\" class=\"fragment\"></span><a href=\"#%E9%96%8B%E8%A3%9C%E8%A3%9C%E5%8A%A9%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>開補補助系</h2>\n\n<h3>\n<span id=\"gatsby-plugin-lodash\" class=\"fragment\"></span><a href=\"#gatsby-plugin-lodash\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-lodash\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-lodash</a>\n</h3>\n\n<p><strong>ビルド時のlodashのサイズを小さくする</strong><br></p>\n\n<h4>\n<span id=\"設定使い方-4\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-4\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>入れるだけでもサイズを削減できますが、オプションで削除対象モジュールを指定してさらに削減可能です。<br>\n※削除対象モジュールは<a href=\"https://github.com/lodash/lodash-webpack-plugin#feature-sets\" rel=\"nofollow noopener\" target=\"_blank\">ここ</a>から選択してください。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-lodash`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">disabledFeatures</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">`shorthands`</span><span class=\"p\">,</span>\n          <span class=\"s2\">`cloning`</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-webpack-bundle-analyzer\" class=\"fragment\"></span><a href=\"#gatsby-plugin-webpack-bundle-analyzer\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-webpack-bundle-analyzer\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-webpack-bundle-analyzer</a>\n</h3>\n\n<p><strong><a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\" rel=\"nofollow noopener\" target=\"_blank\">webpack-bundle-analyzer</a>を使ってbundle.jsの中身のサイズを可視化する</strong><br><br>\n* webpack-bundle-analyzerはパフォーマンスチューニングでbundle.jsのサイズを減らそうと思ったときに便利なライブラリです。ライブラリorコンポーネント毎にサイズをグラフィカルに示してくれます。</p>\n\n<h3>\n<span id=\"設定-10\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-10\"><i class=\"fa fa-link\"></i></a>設定</h3>\n\n<p>このプラグインは内部webpack-bundle-analyzerというライブラリを使っており、<br>\n<a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer#options-for-plugin\" rel=\"nofollow noopener\" target=\"_blank\">webpack-bundle-analyzerのオプション</a>なら何でも指定できます。<br></p>\n\n<p>デフォルトだと<code>gatsby develop</code>するたびにブラウザが開くので、<br>\nそれがいやなら下記のようにすると良いでしょう。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>    <span class=\"p\">{</span>\n      <span class=\"nl\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-webpack-bundle-analyzer`</span><span class=\"p\">,</span>\n      <span class=\"nx\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nl\">openAnalyzer</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"使い方-9\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-9\"><i class=\"fa fa-link\"></i></a>使い方</h3>\n\n<p><code>gatsby develop</code>して<code>http://localhost:8888</code>にアクセスします。<br>\nすると下記のようにコンポーネント毎のサイズをグラフィカルに示してくれます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/f38171316c68e9c327486036add3ef875f39063a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63623365336136322d356563642d323861332d373832312d3164336364343666616164342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/f38171316c68e9c327486036add3ef875f39063a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f63623365336136322d356563642d323861332d373832312d3164336364343666616164342e706e67\" alt=\"bundlesize.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/cb3e3a62-5ecd-28a3-7821-1d3cd46faad4.png\"></a></p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-google-analytics\" class=\"fragment\"></span><a href=\"#gatsby-plugin-google-analytics\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-google-analytics\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-google-analytics</a>\n</h3>\n\n<p><strong><a href=\"https://analytics.google.com/analytics/web/\" rel=\"nofollow noopener\" target=\"_blank\">Google Analytics</a>を使えるようにする</strong><br></p>\n\n<h4>\n<span id=\"設定使い方-5\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-5\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p><code>gatsby-config.js</code>でトラッキングIDを設定するだけです。Google AnalyticsでトラッキングIDを発行して設定しましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-google-analytics`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">trackingId</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_GOOGLE_ANALYTICS_TRACKING_ID\"</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-facebook-analytics\" class=\"fragment\"></span><a href=\"#gatsby-plugin-facebook-analytics\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-facebook-analytics/\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-facebook-analytics</a>\n</h3>\n\n<p><strong><a href=\"https://developers.facebook.com/docs/analytics/?locale=ja_JP\" rel=\"nofollow noopener\" target=\"_blank\">Facebook Analytics</a>を使えるようにする</strong><br></p>\n\n<h4>\n<span id=\"設定使い方-6\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-6\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-facebook-analytics`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">appId</span><span class=\"p\">:</span> <span class=\"s2\">\"あなたのAPP ID\"</span><span class=\"p\">,</span>\n        <span class=\"c1\">// 開発時も解析対象とするか</span>\n        <span class=\"c1\">// デフォルトはfalseでプロダクションのみ解析対象とします</span>\n        <span class=\"na\">includeInDevelopment</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"c1\">// SDKのデバックバージョンを含めるか</span>\n        <span class=\"c1\">// デフォルトはfalseでライブラリはsdk.jsをロードします。</span>\n        <span class=\"na\">debug</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"c1\">// 言語を指定。デフォルトはenglish</span>\n        <span class=\"na\">language</span><span class=\"p\">:</span> <span class=\"s2\">\"ja-jp\"</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h2>\n<span id=\"ui系\" class=\"fragment\"></span><a href=\"#ui%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>UI系</h2>\n\n<h3>\n<span id=\"gatsby-plugin-nprogress\" class=\"fragment\"></span><a href=\"#gatsby-plugin-nprogress\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-nprogress\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-nprogress</a>\n</h3>\n\n<p><strong>ローディングに時間がかかっている時にプログレスバーを表示する</strong><br><br>\n* <a href=\"http://ricostacruz.com/nprogress/\" rel=\"nofollow noopener\" target=\"_blank\">NProgress</a>を使って、リンククリックから1秒たってもローディング中の場合にプログレスバーを表示します。</p>\n\n<h4>\n<span id=\"設定使い方-7\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-7\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>下記のように設定します。<code>color</code>でバーの色が変更可能です。<br>\nまたオプションには<a href=\"https://github.com/rstacruz/nprogress#configuration\" rel=\"nofollow noopener\" target=\"_blank\">NProgress</a>のオプションが全て指定できるようになっています。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-nprogress`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"s2\">`#444`</span><span class=\"p\">,</span>\n        <span class=\"na\">showSpinner</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-catch-links\" class=\"fragment\"></span><a href=\"#gatsby-plugin-catch-links\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-catch-links\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-catch-links</a>\n</h3>\n\n<p><strong>aタグでローカル遷移する時にリロードを抑止してヒストリーAPIで遷移できるようにする</strong></p>\n\n<p>GatsbyはSPAなのでローカル遷移はヒストリーAPIを使うべきで、リロードは避けたいところですが、<br>\n<code>&lt;a href=\"tags/react\" &gt;ローカル遷移のリンク&lt;/a&gt;</code>のような<strong>a</strong>タグの場合、クリック時に（ブラウザのでフォルの挙動により）リロードしてしまいます。</p>\n\n<p>このプラグインを使えば、<strong>a</strong>タグの場合でもローカル遷移であればリロードを抑止し、ヒストリーAPIを使った遷移が可能です。<br>\n<a href=\"https://www.gatsbyjs.org/docs/gatsby-link/#programmatic-navigation\" rel=\"nofollow noopener\" target=\"_blank\">Gatsby-Link</a>を使っていれば問題ないのですが、どうしても<strong>a</strong>タグしか使えない場合は、このプラグインが役立つでしょう。</p>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-layout\" class=\"fragment\"></span><a href=\"#gatsby-plugin-layout\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-layout\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-layout</a>\n</h3>\n\n<p><strong>1系のレイアウト機能を2系でも使えるようにする</strong><br></p>\n\n<ul>\n<li>1系から2系に移行したときに、レイアウト機能(2系では削除された機能)をそのまま使えるようにするために使います。</li>\n</ul>\n\n<h4>\n<span id=\"設定使い方-8\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-8\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p><code>gatsby-config.js</code>の設定は特に変わったところはありません。<br>\nレイアウト用ファイルは<code>src/layouts/index.js</code>を作成しましょう。</p>\n\n<h2>\n<span id=\"ファイル系\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>ファイル系</h2>\n\n<p>JSON,XML,YAML,CSVのパースは使い方はほぼ一緒なのでまとめて説明します。</p>\n\n<ul>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-json\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-json</a>\n\n<ul>\n<li><strong>JSONファイルをパースする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-xml\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-xml</a>\n\n<ul>\n<li><strong>XMLファイルをパースする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-yaml\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-yaml</a>\n\n<ul>\n<li><strong>Yamlファイルをパースする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-csv\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-csv</a>\n\n<ul>\n<li><strong>CSVファイルをパースする</strong></li>\n</ul>\n</li>\n</ul>\n\n<p>これらはgatsby-source-filesystemとあわせて使います。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">`gatsby-transformer-json`</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-filesystem`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s2\">`./src/data/`</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"gatsby-source-filesystem\" class=\"fragment\"></span><a href=\"#gatsby-source-filesystem\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-source-filesystem</a>\n</h3>\n\n<p><strong>ファイルを読み取りGatsby上で扱えるFileノードを生成する</strong><br></p>\n\n<ul>\n<li>\n<code>transformer</code>プラグイン（ファイルノードをファイル形式毎に最適化したノードに変換するプラグイン）と併用します。例えば<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-json\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-json</a>はJSONファイルをJSONノードに変換し、<a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark/?=gatsby-transformer-remark\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-remark</a>はマークダウンファイルをMarkdownRemarkノードに変換します。</li>\n<li>※gatsby-starter-blogインストール済</li>\n</ul>\n\n<h3>\n<span id=\"設定方法使い方\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>設定方法・使い方</h3>\n\n<ul>\n<li>\n<code>gatsby-config.js</code>では読み込み対象のフォルダパスを指定します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.js</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-filesystem`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s2\">`pages`</span><span class=\"p\">,</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">__dirname</span><span class=\"p\">}</span><span class=\"s2\">/src/pages/`</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-filesystem`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s2\">`data`</span><span class=\"p\">,</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">__dirname</span><span class=\"p\">}</span><span class=\"s2\">/src/data/`</span><span class=\"p\">,</span>\n        <span class=\"na\">ignore</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">`**/\\.*`</span><span class=\"p\">],</span> <span class=\"c1\">// ドット始まりのファイルは無視</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<ul>\n<li>読み取ったファイルノードはGraphQLで取得できます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"graphql\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"n\">allFile</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">edges</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">extension</span><span class=\"w\">\n        </span><span class=\"n\">dir</span><span class=\"w\">\n        </span><span class=\"n\">modifiedTime</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>JavaScriptの関数 <code>createFilePath</code> を用意しています。実際<code>gatsby-config.js</code>ではマークダウン読み込みで使っています。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.js</span></div>\n<div class=\"highlight\"><pre><span class=\"nx\">exports</span><span class=\"p\">.</span><span class=\"nx\">onCreateNode</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">node</span><span class=\"p\">,</span> <span class=\"nx\">actions</span><span class=\"p\">,</span> <span class=\"nx\">getNode</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">createNodeField</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">actions</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">node</span><span class=\"p\">.</span><span class=\"nx\">internal</span><span class=\"p\">.</span><span class=\"nx\">type</span> <span class=\"o\">===</span> <span class=\"s2\">`MarkdownRemark`</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">value</span> <span class=\"o\">=</span> <span class=\"nx\">createFilePath</span><span class=\"p\">({</span> <span class=\"nx\">node</span><span class=\"p\">,</span> <span class=\"nx\">getNode</span> <span class=\"p\">})</span>\n    <span class=\"nx\">createNodeField</span><span class=\"p\">({</span>\n      <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s2\">`slug`</span><span class=\"p\">,</span>\n      <span class=\"nx\">node</span><span class=\"p\">,</span>\n      <span class=\"nx\">value</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<ul>\n<li>同じく関数<code>createRemoteFileNode</code>を用意しています。こちらは名前の通り、リモートのファイル読み込みで使用します。</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-transformer-remark\" class=\"fragment\"></span><a href=\"#gatsby-transformer-remark\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-remark</a>\n</h3>\n\n<p><strong>マークダウンファイルをパースする（MarkdownRemarkノードに変換する）</strong><br></p>\n\n<h4>\n<span id=\"使い方-10\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-10\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<ul>\n<li>MarkdownRemarkノードはGraphQLで取得可能です。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"graphql\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"n\">allMarkdownRemark</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">edges</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">html</span><span class=\"w\">\n        </span><span class=\"n\">headings</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"n\">depth</span><span class=\"w\">\n          </span><span class=\"n\">value</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n        </span><span class=\"n\">frontmatter</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"n\">title</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>目次も取得できます。目次のURLは<code>slug</code>ですが<code>pathToSlugField</code>でカスタム可能です。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"graphql\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"n\">allMarkdownRemark</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">edges</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">html</span><span class=\"w\">\n        </span><span class=\"n\">tableOfContents</span><span class=\"p\">(</span><span class=\"n\">pathToSlugField</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"frontmatter.path\"</span><span class=\"p\">)</span><span class=\"w\">\n        </span><span class=\"n\">frontmatter</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"n\">path</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div></div>\n\n<p><br></p>\n\n<ul>\n<li>要約も取得できます。デフォルト120文字ですが、<code>pruneLength</code>でカスタム可能です。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"graphql\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"n\">allMarkdownRemark</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">edges</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">html</span><span class=\"w\">\n        </span><span class=\"n\">excerpt</span><span class=\"p\">(</span><span class=\"n\">pruneLength</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">500</span><span class=\"p\">)</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div></div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-image\" class=\"fragment\"></span><a href=\"#gatsby-image\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-image</a>\n</h3>\n\n<p><strong>画像読み込みを最適化する</strong></p>\n\n<ul>\n<li>gatsby-plugin-sharpと併せて使用します</li>\n<li>Webサイトにおいて画像読み込みの最適化はかなり手間がかかりますが、それをよしなりやってくれるのがこのプラグインです。GraphQLとSharpを使ったGatsbyのネイティブ画像処理機能とシームレスに連携するように設計されています。</li>\n</ul>\n\n<h4>\n<span id=\"設定使い方-9\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-9\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<ul>\n<li>\n<code>gatsby-plugin-sharp</code>、<code>gatsby-transformer-sharp</code>と一緒に使います。下記のように設定します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre><span class=\"kd\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">`path`</span><span class=\"p\">)</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-filesystem`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s2\">`images`</span><span class=\"p\">,</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s2\">`src`</span><span class=\"p\">,</span> <span class=\"s2\">`images`</span><span class=\"p\">),</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">`gatsby-plugin-sharp`</span><span class=\"p\">,</span>\n    <span class=\"s2\">`gatsby-transformer-sharp`</span><span class=\"p\">,</span>\n  <span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<ul>\n<li>実際使う場合はコンポーネント内でHTMLの<code>img</code>タグの代わりにgatsby-imageの<code>Img</code>タグを使います。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"s2\">\"react\"</span>\n<span class=\"k\">import</span> <span class=\"nx\">Img</span> <span class=\"k\">from</span> <span class=\"s2\">\"gatsby-image\"</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">({</span> <span class=\"nx\">data</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n  <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"nx\">gatsby</span><span class=\"o\">-</span><span class=\"nx\">image</span><span class=\"o\">&lt;</span><span class=\"sr\">/h1</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"nx\">Img</span> <span class=\"nx\">fixed</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">childImageSharp</span><span class=\"p\">.</span><span class=\"nx\">fixed</span><span class=\"p\">}</span> <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>  <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span><span class=\"p\">)</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">query</span> <span class=\"o\">=</span> <span class=\"nx\">graphql</span><span class=\"s2\">`\n  query {\n    file(relativePath: { eq: \"blog/avatars/kyle-mathews.jpeg\" }) {\n      childImageSharp {\n        fixed(width: 125, height: 125) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`</span>\n</pre></div></div>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-transformer-sharp\" class=\"fragment\"></span><a href=\"#gatsby-transformer-sharp\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-sharp\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-transformer-sharp</a>\n</h3>\n\n<p><strong>画像読み込みでImageSharpノードを生成する</strong><br></p>\n\n<ul>\n<li>\n<code>gatsby-plugin-sharp</code>と併用します。</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-plugin-sharp\" class=\"fragment\"></span><a href=\"#gatsby-plugin-sharp\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sharp\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-sharp</a>\n</h3>\n\n<p><strong><a href=\"https://github.com/lovell/sharp\" rel=\"nofollow noopener\" target=\"_blank\">Sharp</a>(画像圧縮ライブラリ)を使えるようにする</strong><br></p>\n\n<ul>\n<li>Gatsbyエンドユーザーが使うというよりは、プラグインの一部で使う低レイヤーのプラグイン。</li>\n</ul>\n\n<h2>\n<span id=\"css系\" class=\"fragment\"></span><a href=\"#css%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>CSS系</h2>\n\n<p>SASSやCSS in JSのライブラリ用のプラグインは一通り用意されています。<br>\nプラグインを入れるだけで簡単に使えるので設定や使い方は省略します。</p>\n\n<ul>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sass\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-sass</a>\n\n<ul>\n<li><strong>GatsbyでSASS/SCSSを使えるようにする</strong></li>\n<li>\n<code>node-sass</code>をあわせてインストールしてください。</li>\n<li>CSS Moduleを使う場合、拡張子を<code>module.scss</code>、<code>module.sass</code>などとしてください。</li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-styled-components\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-styled-components</a>\n\n<ul>\n<li><strong><a href=\"https://github.com/styled-components/styled-components\" rel=\"nofollow noopener\" target=\"_blank\">Styled Components</a>を使えるようにする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-glamor\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-glamor</a>\n\n<ul>\n<li><strong><a href=\"https://github.com/threepointone/glamor\" rel=\"nofollow noopener\" target=\"_blank\">Glamor</a>と<a href=\"https://github.com/paypal/glamorous\" rel=\"nofollow noopener\" target=\"_blank\">glamorous</a>を使えるようにする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-emotion/\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-emotion</a>\n\n<ul>\n<li><strong><a href=\"https://github.com/emotion-js/emotion\" rel=\"nofollow noopener\" target=\"_blank\">Emotion</a>を使えるようにする</strong></li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-postcss\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-postcss</a>\n\n<ul>\n<li><strong><a href=\"https://postcss.org/\" rel=\"nofollow noopener\" target=\"_blank\">PostCSS</a>が使えるようにする</strong></li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"gatsby-plugin-typography\" class=\"fragment\"></span><a href=\"#gatsby-plugin-typography\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-typography\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-plugin-typography</a>\n</h3>\n\n<p><strong><a href=\"https://kyleamathews.github.io/typography.js/\" rel=\"nofollow noopener\" target=\"_blank\">Typography.js</a>(文章のスタイルを設定するライブラリ)を使えるようにする</strong><br><br>\n* Typography.jsはフォント、フォントサイズ、line-heigth等のパラメータを設定すると、それに従ってCSSを生成してくれるライブラリです。CSSよりも管理が楽になる上、様々なテーマが提供されているので、それを使って簡単にスタイルを設定できます。</p>\n\n<h4>\n<span id=\"設定使い方-10\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BD%BF%E3%81%84%E6%96%B9-10\"><i class=\"fa fa-link\"></i></a>設定・使い方</h4>\n\n<p>スタイル指定用のJavaScriptを作成します。<br>\nテーマを使うと作成が楽です。どんなテーマがあるかは<a href=\"https://kyleamathews.github.io/typography.js/\" rel=\"nofollow noopener\" target=\"_blank\">Typography.js</a>の右上にある<code>Pick theme</code>プルダウンで確認できます。お気に入りのテーマを選んで、npmインストールして使いましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">src/utils/typography.js</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nx\">Typography</span> <span class=\"k\">from</span> <span class=\"s2\">\"typography\"</span>\n<span class=\"k\">import</span> <span class=\"nx\">grandViewTheme</span> <span class=\"k\">from</span> <span class=\"s2\">\"typography-theme-grand-view\"</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">typography</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Typography</span><span class=\"p\">(</span><span class=\"nx\">grandViewTheme</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">rhythm</span><span class=\"p\">,</span> <span class=\"nx\">scale</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">typography</span><span class=\"p\">;</span>\n<span class=\"k\">export</span> <span class=\"p\">{</span> <span class=\"nx\">rhythm</span><span class=\"p\">,</span> <span class=\"nx\">scale</span><span class=\"p\">,</span> <span class=\"nx\">typography</span> <span class=\"k\">as</span> <span class=\"k\">default</span> <span class=\"p\">};</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>JavaScriptでテーマの設定を上書くこともできます。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">src/utils/typography.js</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nx\">Typography</span> <span class=\"k\">from</span> <span class=\"s2\">\"typography\"</span>\n<span class=\"k\">import</span> <span class=\"nx\">grandViewTheme</span> <span class=\"k\">from</span> <span class=\"s2\">\"typography-theme-grand-view\"</span>\n\n<span class=\"nx\">grandViewTheme</span><span class=\"p\">.</span><span class=\"nx\">overrideThemeStyles</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"s1\">'html,body,h1,h2,h3,h4,h5,h6'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"s1\">'#444'</span><span class=\"p\">,</span>\n    <span class=\"na\">fontFamily</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s1\">'-apple-system'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'BlinkMacSystemFont'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'Segoe UI'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'Helvetica Neue'</span>\n      <span class=\"s1\">'Hiragino Kaku Gothic ProN'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'\"Yu Gothic\"'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'YuGothic'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'Verdana'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'Meiryo'</span>\n      <span class=\"s1\">'\"M+ 1p\"'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'sans-serif'</span>\n    <span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">),</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">})</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">typography</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Typography</span><span class=\"p\">(</span><span class=\"nx\">grandViewTheme</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">rhythm</span><span class=\"p\">,</span> <span class=\"nx\">scale</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">typography</span><span class=\"p\">;</span>\n<span class=\"k\">export</span> <span class=\"p\">{</span> <span class=\"nx\">rhythm</span><span class=\"p\">,</span> <span class=\"nx\">scale</span><span class=\"p\">,</span> <span class=\"nx\">typography</span> <span class=\"k\">as</span> <span class=\"k\">default</span> <span class=\"p\">};</span>\n</pre></div>\n</div>\n\n<p><br></p>\n\n<p>作ったスタイル指定用のJavaScriptを<code>gatsby-config.js</code>で指定します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの中</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-plugin-typography`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">pathToConfigModule</span><span class=\"p\">:</span> <span class=\"s2\">`src/utils/typography`</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n</pre></div>\n</div>\n\n<p><br></p><hr>\n\n<h2>\n<span id=\"外部連携系\" class=\"fragment\"></span><a href=\"#%E5%A4%96%E9%83%A8%E9%80%A3%E6%90%BA%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>外部連携系</h2>\n\n<p>ブログなどからデータをひっぱってきてGraphQLで扱えるようにするプラグイン群です。様々ありますが、有名どころを以下に示します。各プラグインの使い方は、かなりがっつりしたものになるのでココでは省略します。</p>\n\n<ul>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-source-medium\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-source-medium</a>\n\n<ul>\n<li>\n<a href=\"https://medium.com/\" rel=\"nofollow noopener\" target=\"_blank\">Medium</a>の記事を引っ張ってきてGraphQLで扱えるようにする</li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-source-wordpres\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-source-wordpres</a>\n\n<ul>\n<li>\n<a href=\"https://ja.wordpress.org/\" rel=\"nofollow noopener\" target=\"_blank\">WordPress</a>の記事を引っ張ってきてGraphQLで扱えるようにする</li>\n</ul>\n</li>\n<li>\n<a href=\"https://www.gatsbyjs.org/packages/gatsby-source-contentful\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-source-contentful</a>\n\n<ul>\n<li>\n<a href=\"https://www.contentful.com/\" rel=\"nofollow noopener\" target=\"_blank\">contentful</a>からデータを引っ張ってきてGraphQLで扱えるようにする</li>\n</ul>\n</li>\n</ul>\n\n<p><br></p><hr>\n\n<h3>\n<span id=\"gatsby-source-esa\" class=\"fragment\"></span><a href=\"#gatsby-source-esa\"><i class=\"fa fa-link\"></i></a><a href=\"https://www.gatsbyjs.org/packages/gatsby-source-esa\" rel=\"nofollow noopener\" target=\"_blank\">gatsby-source-esa</a>\n</h3>\n\n<p><strong><a href=\"https://docs.esa.io/posts/102\" rel=\"nofollow noopener\" target=\"_blank\">esa API</a>を使って<a href=\"https://esa.io/\" rel=\"nofollow noopener\" target=\"_blank\">esa.io</a>のデータを引っ張ってきてGraphQLで扱えるようにする</strong><br></p>\n\n<h4>\n<span id=\"設定-11\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A-11\"><i class=\"fa fa-link\"></i></a>設定</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">gatsby-config.jsの一部</span></div>\n<div class=\"highlight\"><pre>  <span class=\"nx\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"s2\">`gatsby-source-esa`</span><span class=\"p\">,</span>\n      <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// (必須)トークン</span>\n        <span class=\"c1\">// https://[YOUR_TEAM_NAME].esa.io/user/applications からトークンを取得できます。</span>\n        <span class=\"c1\">// なおオーナでないとトークンは取得できません</span>\n        <span class=\"na\">accessToken</span><span class=\"p\">:</span> <span class=\"s2\">`YOUR_PERSONAL_ACCESS_TOKEN`</span><span class=\"p\">,</span>\n        <span class=\"c1\">// (必須)チーム名</span>\n        <span class=\"na\">teamName</span><span class=\"p\">:</span> <span class=\"s2\">`YOUR_TEAM_NAME`</span><span class=\"p\">,</span>\n        <span class=\"c1\">// (任意)検索クエリ</span>\n        <span class=\"c1\">// 詳細は https://docs.esa.io/posts/104 参照</span>\n        <span class=\"c1\">// 例 : 'in:public' や 'wip:false in:public'　など</span>\n        <span class=\"na\">q</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"c1\">// (任意)ベースカテゴリ</span>\n        <span class=\"c1\">// 例 : 'public'</span>\n        <span class=\"na\">baseCategory</span><span class=\"p\">:</span> <span class=\"s1\">''</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"使い方-11\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9-11\"><i class=\"fa fa-link\"></i></a>使い方</h4>\n\n<p>GraphQLで下記スキーマにて取得します。</p>\n\n<div class=\"code-frame\" data-lang=\"graphql\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"n\">allEsaPost</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">edges</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">number</span><span class=\"w\">\n        </span><span class=\"n\">name</span><span class=\"w\">\n        </span><span class=\"n\">body_md</span><span class=\"w\">\n        </span><span class=\"n\">body_html</span><span class=\"w\">\n        </span><span class=\"n\">category</span><span class=\"w\">\n        </span><span class=\"n\">relative_category</span><span class=\"w\">\n        </span><span class=\"n\">tags</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div></div>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>もともと自分のブログで使っていたものも多数ありますが、<br>\n調べてみると、いろいろ便利なプラグインを発見できました。<br>\nこれでますますGatsbyが人気になることを願っています。</p>\n","fields":{"slug":"/f18d04ac-9b1a-5ac8-8d43-8aa3d8f746a7/","title":"Gatsbyプラグイン45選","excerpt":"なにこれReact.js製の静的サイトジェネレーター Gatsbyは、プラグインを使って簡単に機能拡張できる仕組みを持っています。公式プラグインとコミュニティ提供のものをあわせると、なんと502個もあるそうです。今回はその中でも、おすすめ4...","date":"2018-10-23T08:48:23+09:00"},"user":{"id":"Takumon","profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/49915/profile-images/1488080194","description":"SIer"}}},"pageContext":{"slug":"/f18d04ac-9b1a-5ac8-8d43-8aa3d8f746a7/","previous":{"fields":{"slug":"/41febdc6-bf5d-50b8-a695-3c017b8f766a/","title":"10分でできる！ @ngrx/storeチュートリアル with @ngrx/schematics","date":"2018-07-30T18:01:02+09:00","excerpt":"なにこれAngularで状態管理する方法をざっくり把握するためのチュートリアルです。@ngrx/storeベースの簡単なアプリ（数をカウントするアプリ）を作成します。作るだけなら10分程度で出来上がるので、とりあえず手を動かしてngrxを最..."},"id":"41febdc6-bf5d-50b8-a695-3c017b8f766a","title":"10分でできる！ @ngrx/storeチュートリアル with @ngrx/schematics","rendered_body":"\n<h2>\n<span id=\"なにこれ\" class=\"fragment\"></span><a href=\"#%E3%81%AA%E3%81%AB%E3%81%93%E3%82%8C\"><i class=\"fa fa-link\"></i></a>なにこれ</h2>\n\n<p>Angularで状態管理する方法をざっくり把握するためのチュートリアルです。<a href=\"http://ngrx.github.io/\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/store</a>ベースの簡単なアプリ（数をカウントするアプリ）を作成します。作るだけなら10分程度で出来上がるので、とりあえず手を動かしてngrxを最低限を把握したい人向けです。ソースコードも<a href=\"https://github.com/Takumon/ngrx-tutorial/tree/with-ngrx\" rel=\"nofollow noopener\" target=\"_blank\">GitHub</a>に置いているので参考にしてください。<br>\nngrxを使うとボイラープレートが非常に多くなりますが、今回のチュートリアルでは<a href=\"https://github.com/ngrx/platform/tree/master/docs/schematics\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/schematics</a> を使い、ボイラープレートを自動生成することで極力手間を省いています。</p>\n\n<h2>\n<span id=\"アプリの完成イメージ\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E5%AE%8C%E6%88%90%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\"><i class=\"fa fa-link\"></i></a>アプリの完成イメージ</h2>\n\n<ul>\n<li>\n<code>+</code>ボタンをクリックするとCountが+1される</li>\n<li>\n<code>-</code> ボタンをクリックするとCountが- 1される\n<a href=\"https://camo.qiitausercontent.com/b480b8a4f23b0ad498a61f36f69be9fae9cef250/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f38653666363435652d613733342d646238642d656336622d3134346330666465653162302e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/b480b8a4f23b0ad498a61f36f69be9fae9cef250/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f38653666363435652d613733342d646238642d656336622d3134346330666465653162302e676966\" alt=\"counterapp.gif\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/8e6f645e-a734-db8d-ec6b-144c0fdee1b0.gif\"></a>\n</li>\n</ul>\n\n<h2>\n<span id=\"やることやらないこと\" class=\"fragment\"></span><a href=\"#%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8%E3%82%84%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>やること/やらないこと</h2>\n\n<ul>\n<li>やる\n\n<ul>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/store/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/store</a>の使い方\n\n<ul>\n<li>Storeの作り方</li>\n<li>Stateの作り方</li>\n<li>Reducerの作り方</li>\n<li>Actionsの作り方</li>\n</ul>\n</li>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/schematics/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/schematics</a>の使い方\n\n<ul>\n<li>オプションなどを使い極力手間を減らす方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>やらない （下記を理解するには<a href=\"#%E5%8F%82%E8%80%83\">参考</a>のQiitaの記事を見てください。）\n\n<ul>\n<li>状態管理の説明</li>\n<li>Reduxの説明</li>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/router-store/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/router-store</a>の使い方</li>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/entity/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/entity</a>の使い方</li>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/effects/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/effect</a>の使い方<br>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"チュートリアル概要\" class=\"fragment\"></span><a href=\"#%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>チュートリアル概要</h2>\n\n<p>段階を踏んで、ステップごとに動作確認しながら作成していきます。<br>\n各ステップ終了時点のソースコードはGitHubに用意しています。参考にしてください。<br>\n大部分はSchematicsを使ってngコマンドでボイラープレートを自動生成し、メイン部分のみ実装という感じです。</p>\n\n<ol>\n<li>Angularアプリを生成（1分）  ※<a href=\"https://github.com/Takumon/ngrx-tutorial/tree/generated-with-angualr-cli\" rel=\"nofollow noopener\" target=\"_blank\">終了時点のソース</a>\n</li>\n<li>ngrxを使わずにカウント処理実装（2分）※<a href=\"https://github.com/Takumon/ngrx-tutorial/tree/no-ngrx\" rel=\"nofollow noopener\" target=\"_blank\">終了時点のソース</a>\n</li>\n<li>ngrxインストール、初期設定（2分） ※<a href=\"https://github.com/Takumon/ngrx-tutorial/tree/after-ngrx-setting\" rel=\"nofollow noopener\" target=\"_blank\">終了時点のソース</a>\n</li>\n<li>ngrxを使ってカウント処理実装（5分） ※<a href=\"https://github.com/Takumon/ngrx-tutorial/tree/with-ngrx\" rel=\"nofollow noopener\" target=\"_blank\">終了時点のソース</a>\n</li>\n</ol>\n\n<h2>\n<span id=\"前提条件\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6\"><i class=\"fa fa-link\"></i></a>前提条件</h2>\n\n<ul>\n<li>\n<a href=\"https://nodejs.org/ja/\" rel=\"nofollow noopener\" target=\"_blank\">Node.js</a>インストール済み</li>\n<li>\n<a href=\"https://cli.angular.io/\" rel=\"nofollow noopener\" target=\"_blank\">Angular CLI</a>グローバルインストール済み</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> npm i <span class=\"nt\">-g</span> @angular/cli\n</pre></div></div>\n\n<ul>\n<li>\n<a href=\"https://cli.angular.io/\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/schematics</a>グローバルインストール済み</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> npm i <span class=\"nt\">-g</span> @ngrx/schematics\n</pre></div></div>\n\n<h2>\n<span id=\"1-angularアプリを生成1分\" class=\"fragment\"></span><a href=\"#1-angular%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E7%94%9F%E6%88%901%E5%88%86\"><i class=\"fa fa-link\"></i></a>1. Angularアプリを生成（1分）</h2>\n\n<ul>\n<li>ng newコマンドを実行します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng new ngrx-tutorial\n</pre></div></div>\n\n<ul>\n<li>生成されたアプリ配下に移動し、一旦Webアプリを立ち上げてみます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> <span class=\"nb\">cd </span>ngrx-tutorial\n<span class=\"gp\">$</span> ng serve <span class=\"nt\">-o</span>\n</pre></div></div>\n\n<ul>\n<li>ブラウザが起動し下記のような画面が表示されたら成功です。\n<a href=\"https://camo.qiitausercontent.com/f46653279a0efbe1432919aa808f440fc6eb1ede/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35633139633366302d313034612d336566322d613333642d3331356330663061336639662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/f46653279a0efbe1432919aa808f440fc6eb1ede/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f35633139633366302d313034612d336566322d613333642d3331356330663061336639662e706e67\" alt=\"スクリーンショット 2018-07-30 1.03.59.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/5c19c3f0-104a-3ef2-a33d-315c0f0a3f9f.png\"></a>\n</li>\n</ul>\n\n<h2>\n<span id=\"2-ngrxを使わずにカウント処理実装2分\" class=\"fragment\"></span><a href=\"#2-ngrx%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%9A%E3%81%AB%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E5%87%A6%E7%90%86%E5%AE%9F%E8%A3%852%E5%88%86\"><i class=\"fa fa-link\"></i></a>2. ngrxを使わずにカウント処理実装（2分）</h2>\n\n<p>カウント処理の資産は全て<code>src/app/counter</code>フォルダ配下に作成します。<br>\nまずはコマンドラインからボイラープレートを作成し、その後カウント処理を実装します。</p>\n\n<h3>\n<span id=\"ボイラープレート作成\" class=\"fragment\"></span><a href=\"#%E3%83%9C%E3%82%A4%E3%83%A9%E3%83%BC%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>ボイラープレート作成</h3>\n\n<ul>\n<li>カウント処理関連資産をまとめるモジュールを作成します。\n\n<ul>\n<li>このモジュールをアプリ全体のモジュールに登録するため<code>--module</code>オプションを指定します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g module counter <span class=\"nt\">--module</span><span class=\"o\">=</span>app.module.ts\n</pre></div></div>\n\n<ul>\n<li>カウント処理用のコンポーネントを作成します。\n\n<ul>\n<li>上記で作成したモジュールにコンポーネントを登録するため<code>--module</code>オプションを指定します。</li>\n<li>最終的にアプリ全体のモジュールにコンポーネントを登録するため<code>--export</code>オプションを指定します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g component counter <span class=\"nt\">--module</span><span class=\"o\">=</span>counter/counter.module.ts <span class=\"nt\">--export</span>\n</pre></div></div>\n\n<ul>\n<li>\n<code>app.component.html</code>修正し、作成したカウント処理用のコンポーネントを呼び出すようにします。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">app.component.html</span></div>\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;app-counter&gt;&lt;/app-counter&gt;</span>\n</pre></div>\n</div>\n\n<ul>\n<li>一旦ここまででWebアプリを立ち上げてみます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng serve <span class=\"nt\">-o</span>\n</pre></div></div>\n\n<ul>\n<li>ブラウザが起動し、下記画面が表示されます。開発者ツールでエラーがなければ成功です。</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/6ed3cc13498f56621ca94113a6eacdc34949e17f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37373261373530312d333461372d336566312d363636362d6431336537393338326365362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/6ed3cc13498f56621ca94113a6eacdc34949e17f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f37373261373530312d333461372d336566312d363636362d6431336537393338326365362e706e67\" alt=\"スクリーンショット 2018-07-30 1.06.30.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/772a7501-34a7-3ef1-6666-d13e79382ce6.png\"></a></p>\n\n<h3>\n<span id=\"処理実装\" class=\"fragment\"></span><a href=\"#%E5%87%A6%E7%90%86%E5%AE%9F%E8%A3%85\"><i class=\"fa fa-link\"></i></a>処理実装</h3>\n\n<ul>\n<li>カウント用コンポーネントで実際の処理を記述します。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"ts\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/counter.component.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Component</span><span class=\"p\">,</span> <span class=\"nx\">OnInit</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'@angular/core'</span><span class=\"p\">;</span>\n\n<span class=\"p\">@</span><span class=\"nd\">Component</span><span class=\"p\">({</span>\n  <span class=\"na\">selector</span><span class=\"p\">:</span> <span class=\"s1\">'app-counter'</span><span class=\"p\">,</span>\n  <span class=\"na\">templateUrl</span><span class=\"p\">:</span> <span class=\"s1\">'./counter.component.html'</span><span class=\"p\">,</span>\n  <span class=\"na\">styleUrls</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'./counter.component.css'</span><span class=\"p\">]</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">class</span> <span class=\"nx\">CounterComponent</span> <span class=\"kr\">implements</span> <span class=\"nx\">OnInit</span> <span class=\"p\">{</span>\n  <span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"kd\">constructor</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n\n  <span class=\"nx\">ngOnInit</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">increment</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">count</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">decrement</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">count</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/counter.component.html</span></div>\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;button</span> <span class=\"err\">(</span><span class=\"na\">click</span><span class=\"err\">)=\"</span><span class=\"na\">increment</span><span class=\"err\">()\"</span><span class=\"nt\">&gt;</span>+<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;button</span> <span class=\"err\">(</span><span class=\"na\">click</span><span class=\"err\">)=\"</span><span class=\"na\">decrement</span><span class=\"err\">()\"</span><span class=\"nt\">&gt;</span>-<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;div&gt;</span>Count: {{count}}<span class=\"nt\">&lt;/div&gt;</span>\n</pre></div>\n</div>\n\n<ul>\n<li>ここまででWebアプリを立ち上げてみます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng serve <span class=\"nt\">-o</span>\n</pre></div></div>\n\n<ul>\n<li>ブラウザが起動し下記画面が表示されます。<code>+</code>,<code>-</code>ボタンをクリックすると数字が増えたり減ったりした、開発者ツールでもエラーがなければ成功です。</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" alt=\"スクリーンショット 2018-07-30 0.59.12.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png\"></a></p>\n\n<h2>\n<span id=\"3-ngrxインストール初期設定2分\" class=\"fragment\"></span><a href=\"#3-ngrx%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A2%E5%88%86\"><i class=\"fa fa-link\"></i></a>3. ngrxインストール、初期設定（2分）</h2>\n\n<p>@ngrx/storeをアプリに導入し、初期設定をします。</p>\n\n<ul>\n<li>下記ライブラリをインストールします。\n\n<ul>\n<li>\n<code>@ngrx/schematics</code>\n\n<ul>\n<li>Angualr CLIでngrxの雛形を作るためのライブラリ</li>\n</ul>\n</li>\n<li>\n<code>@ngrx/store</code>\n\n<ul>\n<li>ngrxでStore,Reducer,Actionを使うためのライブラリ</li>\n</ul>\n</li>\n<li>\n<code>@ngrx/store-devtools</code>\n\n<ul>\n<li>強力なデバッカを使えるようにするためのライブラリ</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> npm i <span class=\"nt\">-D</span> @ngrx/schematics\n<span class=\"gp\">$</span> npm i <span class=\"nt\">-s</span> @ngrx/store\n<span class=\"gp\">$</span> npm i <span class=\"nt\">-s</span> @ngrx/store-devtools\n</pre></div></div>\n\n<p>*<code>@ngrx/schematics</code>をデフォルトのSchematicsに追加します（コマンドラインでngrxのボイラープレート生成時に<code>@ngrx/schematics</code>の指定を省略できるようにするためです。）</p>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng config cli.defaultCollection @ngrx/schematics\n</pre></div></div>\n\n<ul>\n<li>上記を実行すると、<code>angular.json</code>にこのような設定が追加されます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"json\">\n<div class=\"code-lang\"><span class=\"bold\">angular.json</span></div>\n<div class=\"highlight\"><pre><span class=\"w\">  </span><span class=\"s2\">\"defaultProject\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ngrx-tutorial\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"s2\">\"cli\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"s2\">\"defaultCollection\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"@ngrx/schematics\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span></pre></div>\n</div>\n\n<ul>\n<li>ルートのStoreを作成します。\n\n<ul>\n<li>\n<code>src/app/state</code>配下に生成したいので<code>--statePath</code>オプションを指定します。</li>\n<li>アプリ全体のモジュールに登録したいので<code>--module</code>オプションを指定します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g store state <span class=\"nt\">--statePath</span> state <span class=\"nt\">--root</span> <span class=\"nt\">--module</span> app.module.ts\n</pre></div></div>\n\n<ul>\n<li>上記コマンドで更新した<code>src/app/app.module.ts</code>で<code>environment</code>のimport文のパスでエラーが出ている場合は修正してください。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">app/src/app.module.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"gd\">- import { environment } from '../../environments/environment';\n</span><span class=\"gi\">+ import { environment } from '../environments/environment';\n</span></pre></div>\n</div>\n\n<ul>\n<li>ここまででWebアプリを立ち上げてみます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng serve <span class=\"nt\">-o</span>\n</pre></div></div>\n\n<ul>\n<li>手順2の動作確認時と同様の挙動になります、開発者ツールでもエラーがなければ成功です。</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" alt=\"スクリーンショット 2018-07-30 0.59.12.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png\"></a></p>\n\n<h2>\n<span id=\"4-ngrxを使ってカウント処理実装5分\" class=\"fragment\"></span><a href=\"#4-ngrx%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E5%87%A6%E7%90%86%E5%AE%9F%E8%A3%855%E5%88%86\"><i class=\"fa fa-link\"></i></a>4. ngrxを使ってカウント処理実装（5分）</h2>\n\n<p>ここからは実際にStore、Reducer、Actionを作成し、カウント処理の値をStoreに移行します。<br>\nここで作成する資産はカウンター処理に閉じたものなので、<code>src/app/counter/state</code>配下に作成します。<br>\nまた<code>@ngrx/schemetics</code>のデフォルトではReducer、Actionなどの資産が、役割ごとにフォルダ分けされてしまいますが、１フォルダに集約したほうがソースが修正しやすいので、今回は全て<code>src/app/counter/state</code>の直下に作成します。</p>\n\n<h3>\n<span id=\"ボイラープレート生成\" class=\"fragment\"></span><a href=\"#%E3%83%9C%E3%82%A4%E3%83%A9%E3%83%BC%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E7%94%9F%E6%88%90\"><i class=\"fa fa-link\"></i></a>ボイラープレート生成</h3>\n\n<ul>\n<li>Store\n\n<ul>\n<li>\n<code>src/app/counter/state</code>直下に作成するため<code>--statePath</code>オプションを指定します。</li>\n<li>カウント処理関連モジュールに登録したいので<code>--module</code>オプションを指定します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g store counter/counter <span class=\"nt\">--statePath</span> state <span class=\"nt\">--module</span> counter.module.ts\n</pre></div></div>\n\n<ul>\n<li>Reducer\n\n<ul>\n<li>上記で作成したStoreに本Reducerを登録したいため<code>--reducers</code>オプションを指定します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g reducer counter/state/counter <span class=\"nt\">--reducers</span> index.ts\n</pre></div></div>\n\n<ul>\n<li>Action\n\n<ul>\n<li>\n<code>src/app/counter/state</code>直下に作成するため<code>--flat</code>オプションを登録します。</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng g action counter/state/counter <span class=\"nt\">--flat</span>\n</pre></div></div>\n\n<p>※この時点ではコンパイルエラーがでますので、動作確認はできません。そのまま次に進みます。</p>\n\n<h2>\n<span id=\"処理実装-1\" class=\"fragment\"></span><a href=\"#%E5%87%A6%E7%90%86%E5%AE%9F%E8%A3%85-1\"><i class=\"fa fa-link\"></i></a>処理実装</h2>\n\n<p>依存関係の都合でボイラープレートとは逆順で実装していきます。</p>\n\n<h3>\n<span id=\"action\" class=\"fragment\"></span><a href=\"#action\"><i class=\"fa fa-link\"></i></a>Action</h3>\n\n<p>ボイラープレート生成時から下記のように修正します。<br>\n※コメントはコードの説明なので無視して実装してください。</p>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/state/counter.actions.ts</span></div>\n<div class=\"highlight\"><pre>import { Action } from '@ngrx/store';\n\nexport enum CounterActionTypes {\n// Actionごとに型を定義します。\n<span class=\"gd\">-  LoadCounters = '[Counter] Load Counters'\n</span><span class=\"gi\">+  CountIncrement = '[Counter] Increment Count',\n+  CountDecrement = '[Counter] Decrement Count'\n</span>}\n\n// Actionごとに@ngrx.storeのActionをインプリしたクラスを作成します。\n// 複雑な処理をする場合はコンストラクタ引数をとりますが、\n// 本チュートリアルでは簡単のため引数なしにしています。\n<span class=\"gd\">- export class Counter implements Action {\n-   readonly type = CounterActionTypes.LoadCounters;\n- }\n</span><span class=\"gi\">+ export class CountIncrement implements Action {\n+   readonly type = CounterActionTypes.CountIncrement;\n+   public constructor() {}\n+ }\n+ \n+ export class CountDecrement implements Action {\n+   readonly type = CounterActionTypes.CountDecrement;\n+   public constructor() {}\n+ }\n</span>\n\n// 上記で定義したActionクラスを集約した型を定義します。Reducerで使うためです。\n<span class=\"gd\">- export type CounterActions = LoadCounters;\n</span><span class=\"gi\">+ export type CounterActions = CountIncrement | CountDecrement;\n</span></pre></div>\n</div>\n\n<h2>\n<span id=\"reducer作成\" class=\"fragment\"></span><a href=\"#reducer%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Reducer作成</h2>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/state/counter.reducer.ts</span></div>\n<div class=\"highlight\"><pre>import { Action } from '@ngrx/store';\n<span class=\"gi\">+ import { CounterActionTypes } from './counter.actions';\n</span>\n\nexport interface State {\n// カウンター処理に置けるStateを定義します。\n<span class=\"gi\">+   count: number;\n</span>}\n\nexport const initialState: State = {\n// カウンター処理に置けるStateの初期値を定義します。\n<span class=\"gi\">+   count: 0\n</span>};\n\n\nexport function reducer(state = initialState, action: Action): State {\n  switch (action.type) {\n// 引数として受け取ったActionの型に応じて処理を振り分けます\n// ここではカウンター処理に関連するアクションのみ拾って、他はStateをそのまま返します。\n<span class=\"gi\">+     case CounterActionTypes.CountIncrement:\n</span>// Stateを変更する場合は、Stateがイミュータブルになるように元のStateには変更を加えず\n// Object.assingで新規オブジェクトを作るようにします。\n<span class=\"gi\">+       return Object.assign({}, { ...state, count : state.count + 1 });\n+     case CounterActionTypes.CountDecrement:\n+       return Object.assign({}, { ...state, count : state.count - 1 });\n</span>    default:\n      return state;\n  }\n}\n\n// コンポーネントでStateのCountを取得するための関数を定義します。\n// Storeの方にも定義しますが、ここでは本ファイルで定義している\n// Stateのプロパティに関連する処理のみ定義します。\n<span class=\"gi\">+ export const getCount = (state: State) =&gt; state.count;\n</span></pre></div>\n</div>\n\n<ul>\n<li>Store</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/state/index.ts</span></div>\n<div class=\"highlight\"><pre>import {\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\n// ng gコマンド生成時は相対パスがずれている可能性があるため\n// その場合は修正する\n<span class=\"gd\">- import { environment } from '../../environments/environment';\n</span><span class=\"gi\">+ import { environment } from '../../../environments/environment';\n</span>import * as fromCounter from './counter.reducer';\n\nexport interface State {\n\n  counter: fromCounter.State;\n}\n\nexport const reducers: ActionReducerMap&lt;State&gt; = {\n\n  counter: fromCounter.reducer,\n};\n\n\nexport const metaReducers: MetaReducer&lt;State&gt;[] = !environment.production ? [] : [];\n\n// コンポーネントでStateのプロパティを取得するための関数を定義します。\n// 複数コンポーネントで使う度に定義するのは冗長なのでココで共通的に定義します。\n<span class=\"gi\">+ export const getCounterFeatureState = createFeatureSelector&lt;State&gt;('counter');\n+ export const getCounter = createSelector(getCounterFeatureState, s =&gt; s.counter);\n+ export const getCount = createSelector(getCounter, fromCounter.getCount);\n</span></pre></div>\n</div>\n\n<ul>\n<li>Component</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/counter.component.ts</span></div>\n<div class=\"highlight\"><pre>import { Component, OnInit } from '@angular/core';\n<span class=\"gi\">+ import { Observable } from 'rxjs';\n+ import { Store } from '@ngrx/store';\n</span>\n<span class=\"gi\">+ import * as CounterReducer from './state/counter.reducer';\n+ import * as CounterActions from './state/counter.actions';\n+ import { getCount } from './state';\n</span>\n<span class=\"gu\">@Component({\n</span>  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n// Storeでの値変更を順次受け付けれるように型をObservableに変更します\n<span class=\"gd\">-   count = 0;\n</span><span class=\"gi\">+   count$: Observable&lt;number&gt;;\n</span>\n// Storeをインジェクションします\n<span class=\"gd\">-   constructor() { }\n</span><span class=\"gi\">+   constructor(private store: Store&lt;CounterReducer.State&gt;) {\n</span>// Storeからカウンタを取得します\n<span class=\"gi\">+     this.count$ = store.select(getCount);\n+  }\n</span>\n  ngOnInit() {\n  }\n\n  increment() {\n// インクリメントの実処理はカウンタのReducerに任せるので\n// ここではActionをdispatchするだけです。\n<span class=\"gd\">-     this.count = this.count + 1;\n</span><span class=\"gi\">+     this.store.dispatch(new CounterActions.CountIncrement());\n</span>  }\n\n  decrement() {\n<span class=\"gd\">-     this.count = this.count - 1;\n</span><span class=\"gi\">+     this.store.dispatch(new CounterActions.CountDecrement());\n</span>  }\n\n}\n</pre></div>\n</div>\n\n<ul>\n<li>ConponentのHTML</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"diff\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/counter.component.html</span></div>\n<div class=\"highlight\"><pre>&lt;button (click)=\"increment()\"&gt;+&lt;/button&gt;\n&lt;button (click)=\"decrement()\"&gt;-&lt;/button&gt;\n&lt;!-- 変数名と型が変わったのでHTMLも若干修正します --&gt;\n<span class=\"gd\">- &lt;div&gt;Count: {{count }}&lt;/div&gt;\n</span><span class=\"gi\">+ &lt;div&gt;Count: {{count$ | async }}&lt;/div&gt;\n</span></pre></div>\n</div>\n\n<ul>\n<li>Webアプリを立ち上げてみます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"terminal\"><div class=\"highlight\"><pre><span class=\"gp\">$</span> ng serve <span class=\"nt\">-o</span>\n</pre></div></div>\n\n<ul>\n<li>開発者ツールなどで全くエラーが出ていなければ成功です。見た目は変わっていませんが、Countは<code>@ngrx/store</code>で管理されるようになっています。</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/e4f3b6b6888e2f7e618fc6587c88775f7b161624/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f34393931352f64353036626336652d636463652d346430302d313130392d3261663966343738303636332e706e67\" alt=\"スクリーンショット 2018-07-30 0.59.12.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png\"></a></p>\n\n<h2>\n<span id=\"補足ストアとストア登録方法\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3%E3%82%B9%E3%83%88%E3%82%A2%E3%81%A8%E3%82%B9%E3%83%88%E3%82%A2%E7%99%BB%E9%8C%B2%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>補足：ストアとストア登録方法</h2>\n\n<p>ストアとストア登録処理はボイラープレートで生成するのでココで改めて説明します。</p>\n\n<p><strong>まずはルートのストアです。</strong><br>\nストアは<code>src/app/state/index.ts</code>に作成されます。<br>\n中身を見るとわかりますが、実態はReducerを集約したActionReducerMapです。<br>\nReducerを新しく作成した時は、このマップにどんどん追加していきます。</p>\n\n<div class=\"code-frame\" data-lang=\"ts\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/state/index.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ActionReducer</span><span class=\"p\">,</span>\n  <span class=\"nx\">ActionReducerMap</span><span class=\"p\">,</span>\n  <span class=\"nx\">createFeatureSelector</span><span class=\"p\">,</span>\n  <span class=\"nx\">createSelector</span><span class=\"p\">,</span>\n  <span class=\"nx\">MetaReducer</span>\n<span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'@ngrx/store'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">environment</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'../../environments/environment'</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">State</span> <span class=\"p\">{</span>\n\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">reducers</span><span class=\"p\">:</span> <span class=\"nx\">ActionReducerMap</span><span class=\"o\">&lt;</span><span class=\"nx\">State</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// ココにReducerが追加されていきます。</span>\n  <span class=\"c1\">// 今回のチュートリアルではルートのストアに１つもReducerを定義していないので空っぽです。</span>\n<span class=\"p\">};</span>\n\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">metaReducers</span><span class=\"p\">:</span> <span class=\"nx\">MetaReducer</span><span class=\"o\">&lt;</span><span class=\"nx\">State</span><span class=\"o\">&gt;</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"o\">!</span><span class=\"nx\">environment</span><span class=\"p\">.</span><span class=\"nx\">production</span> <span class=\"p\">?</span> <span class=\"p\">[]</span> <span class=\"p\">:</span> <span class=\"p\">[];</span>\n\n</pre></div>\n</div>\n\n<p>ストアをモジュールに登録するには下記のように<code>StoreModule.forRoot</code>を使います(ボイラープレートでやってくれます)</p>\n\n<div class=\"code-frame\" data-lang=\"ts\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/app.module.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"p\">@</span><span class=\"nd\">NgModule</span><span class=\"p\">({</span>\n  <span class=\"c1\">// ・・・</span>\n  <span class=\"na\">imports</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// ・・・</span>\n    <span class=\"nx\">StoreModule</span><span class=\"p\">.</span><span class=\"nx\">forRoot</span><span class=\"p\">(</span><span class=\"nx\">reducers</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">metaReducers</span> <span class=\"p\">}),</span>\n    <span class=\"o\">!</span><span class=\"nx\">environment</span><span class=\"p\">.</span><span class=\"nx\">production</span> <span class=\"p\">?</span> <span class=\"nx\">StoreDevtoolsModule</span><span class=\"p\">.</span><span class=\"nx\">instrument</span><span class=\"p\">()</span> <span class=\"p\">:</span> <span class=\"p\">[]</span>\n    <span class=\"c1\">// ・・・</span>\n  <span class=\"p\">],</span>\n  <span class=\"c1\">// ・・・</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">class</span> <span class=\"nx\">AppModule</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n\n</pre></div>\n</div>\n\n<p><strong>次にカウンタのストアに関してです。</strong><br>\nこちらもルートの場合とほぼ同じです。</p>\n\n<div class=\"code-frame\" data-lang=\"ts\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/state/index.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"c1\">// ・・・</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">reducers</span><span class=\"p\">:</span> <span class=\"nx\">ActionReducerMap</span><span class=\"o\">&lt;</span><span class=\"nx\">State</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// カウンタのReducerをマップに登録しています。</span>\n  <span class=\"na\">counter</span><span class=\"p\">:</span> <span class=\"nx\">fromCounter</span><span class=\"p\">.</span><span class=\"nx\">reducer</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">metaReducers</span><span class=\"p\">:</span> <span class=\"nx\">MetaReducer</span><span class=\"o\">&lt;</span><span class=\"nx\">State</span><span class=\"o\">&gt;</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"o\">!</span><span class=\"nx\">environment</span><span class=\"p\">.</span><span class=\"nx\">production</span> <span class=\"p\">?</span> <span class=\"p\">[]</span> <span class=\"p\">:</span> <span class=\"p\">[];</span>\n<span class=\"c1\">// ・・・</span>\n</pre></div>\n</div>\n\n<p>ただ登録は<code>StoreModule.forFeature</code>を使います。<br>\nこのメソッドは、機能毎に状態管理する時に使うもので、ルートのストアに指定した名前で登録されます。使う時になったら遅延ロードしてくれる機能を持っています。</p>\n\n<div class=\"code-frame\" data-lang=\"ts\">\n<div class=\"code-lang\"><span class=\"bold\">src/app/counter/counter.module.ts</span></div>\n<div class=\"highlight\"><pre><span class=\"c1\">// ・・・</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">fromCounter</span> <span class=\"k\">from</span> <span class=\"s1\">'./state'</span><span class=\"p\">;</span>\n<span class=\"c1\">// ・・・</span>\n<span class=\"p\">@</span><span class=\"nd\">NgModule</span><span class=\"p\">({</span>\n  <span class=\"na\">imports</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// ・・・</span>\n    <span class=\"c1\">// アプリ全体のストアにcounterという名前で登録します</span>\n    <span class=\"nx\">StoreModule</span><span class=\"p\">.</span><span class=\"nx\">forFeature</span><span class=\"p\">(</span><span class=\"s1\">'counter'</span><span class=\"p\">,</span> <span class=\"nx\">fromCounter</span><span class=\"p\">.</span><span class=\"nx\">reducers</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">metaReducers</span><span class=\"p\">:</span> <span class=\"nx\">fromCounter</span><span class=\"p\">.</span><span class=\"nx\">metaReducers</span> <span class=\"p\">})</span>\n    <span class=\"c1\">// ・・・</span>\n  <span class=\"p\">],</span>\n  <span class=\"c1\">// ・・・</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">class</span> <span class=\"nx\">CounterModule</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n\n</pre></div>\n</div>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>以上で<code>@ngrx/schematics</code>を使った<code>@ngrx/store</code>のチュートリアルは終了です。<br>\n<code>ngrx</code>ライブラリは他にも<code>@ngrx/router-store</code>、<code>@ngrx/entity</code>、<code>@ngrx/effect</code>があるので、<br>\n今回のアプリをベースに拡張し、理解を深めてみるのも良いかもしれません。</p>\n\n<p>AngularはVue.jsなどと比較するとボイラープレートが多くなってしまいます。<br>\nしかし、ソースコード自動生成機能が充実しているので、けっこう便利なフレームワークです！<br>\nあまり周りでAngular使ってる人がいなくて寂しいのですが、、、、皆さん是非Angular使いましょう！</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li>GitHub\n\n<ul>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/store/README.md#ngrxstore\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/store</a>\n\n<ul>\n<li>公式ページ。サンプルは少し古いですが、ドキュメントは充実しています。</li>\n</ul>\n</li>\n<li>\n<a href=\"https://github.com/ngrx/platform/blob/master/docs/schematics/README.md\" rel=\"nofollow noopener\" target=\"_blank\">@ngrx/schematics</a>\n\n<ul>\n<li>各リンクに行くと、コマンドのオプションの説明などが記載されています。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Medium\n\n<ul>\n<li>\n<a href=\"https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f\" rel=\"nofollow noopener\" target=\"_blank\">Managing State in Angular Applications</a>\n\n<ul>\n<li>Angularで状態管理する時のベストプラクティスを検討し、最終的に@ngrx/storeを紹介している記事です。ソースコードもGitHubにあり、大変参考になります。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Qiita\n\n<ul>\n<li>\n<a href=\"https://qiita.com/puku0x/items/0a8e7224761dc549bd06\" id=\"reference-55d4d1f3588dbe22005a\">@ngrx/storeと@ngrx/effectsの使い方</a>\n\n<ul>\n<li>GitHubに<a href=\"https://github.com/puku0x/ngrx-todo\" rel=\"nofollow noopener\" target=\"_blank\">サンプル</a>もありコード例が多く大変参考になりました。</li>\n</ul>\n</li>\n<li>\n<a href=\"https://qiita.com/musou1500/items/8003c4a3f2b2e80d919f\" id=\"reference-0b88f55e95af744439cc\">@ngrx/schematicsを触ってみる</a>\n\n<ul>\n<li>\n<code>@ngrx/schematics</code>の使い方が網羅されており参考になりました。</li>\n</ul>\n</li>\n<li>\n<a href=\"https://qiita.com/gen2-gk/items/5e5c5b81243def8edc2c#ngrx-%E9%96%A2%E9%80%A3%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AF1%E3%81%A4%E3%81%AE%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B\" id=\"reference-00af0c3c5f2c814f6e6e\">ngrxでハマったポイント</a>\n\n<ul>\n<li>ngrx関連資産をstoreフォルダ配下に集約するという知見はココを参考にさせていただきました。</li>\n</ul>\n</li>\n<li>\n<a href=\"https://qiita.com/kouMatsumoto/items/c8297466c1824953632f\" id=\"reference-2bdc06375583d7c16351\">ngrx紹介</a>\n\n<ul>\n<li>ngrxを知るきっかけになった記事です。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","body":"## なにこれ\nAngularで状態管理する方法をざっくり把握するためのチュートリアルです。[@ngrx/store](http://ngrx.github.io/)ベースの簡単なアプリ（数をカウントするアプリ）を作成します。作るだけなら10分程度で出来上がるので、とりあえず手を動かしてngrxを最低限を把握したい人向けです。ソースコードも[GitHub](https://github.com/Takumon/ngrx-tutorial/tree/with-ngrx)に置いているので参考にしてください。\nngrxを使うとボイラープレートが非常に多くなりますが、今回のチュートリアルでは[@ngrx/schematics](https://github.com/ngrx/platform/tree/master/docs/schematics) を使い、ボイラープレートを自動生成することで極力手間を省いています。\n\n\n## アプリの完成イメージ\n* `+`ボタンをクリックするとCountが+1される\n* `-` ボタンをクリックするとCountが- 1される\n![counterapp.gif](https://qiita-image-store.s3.amazonaws.com/0/49915/8e6f645e-a734-db8d-ec6b-144c0fdee1b0.gif)\n\n## やること/やらないこと\n* やる\n    * [@ngrx/store](https://github.com/ngrx/platform/blob/master/docs/store/README.md)の使い方\n        * Storeの作り方\n        * Stateの作り方\n        * Reducerの作り方\n        * Actionsの作り方\n    * [@ngrx/schematics](https://github.com/ngrx/platform/blob/master/docs/schematics/README.md)の使い方\n        * オプションなどを使い極力手間を減らす方法\n* やらない （下記を理解するには[参考](#参考)のQiitaの記事を見てください。）\n    * 状態管理の説明\n    * Reduxの説明\n    * [@ngrx/router-store](https://github.com/ngrx/platform/blob/master/docs/router-store/README.md)の使い方\n    * [@ngrx/entity](https://github.com/ngrx/platform/blob/master/docs/entity/README.md)の使い方\n    * [@ngrx/effect](https://github.com/ngrx/platform/blob/master/docs/effects/README.md)の使い方  \n    \n\n\n## チュートリアル概要\n段階を踏んで、ステップごとに動作確認しながら作成していきます。\n各ステップ終了時点のソースコードはGitHubに用意しています。参考にしてください。\n大部分はSchematicsを使ってngコマンドでボイラープレートを自動生成し、メイン部分のみ実装という感じです。\n\n1. Angularアプリを生成（1分）  ※[終了時点のソース](https://github.com/Takumon/ngrx-tutorial/tree/generated-with-angualr-cli)\n1. ngrxを使わずにカウント処理実装（2分）※[終了時点のソース](https://github.com/Takumon/ngrx-tutorial/tree/no-ngrx)\n1. ngrxインストール、初期設定（2分） ※[終了時点のソース](https://github.com/Takumon/ngrx-tutorial/tree/after-ngrx-setting)\n1. ngrxを使ってカウント処理実装（5分） ※[終了時点のソース](https://github.com/Takumon/ngrx-tutorial/tree/with-ngrx)\n\n\n\n\n## 前提条件\n* [Node.js](https://nodejs.org/ja/)インストール済み\n* [Angular CLI](https://cli.angular.io/)グローバルインストール済み\n\n```terminal\n$ npm i -g @angular/cli\n```\n\n* [@ngrx/schematics](https://cli.angular.io/)グローバルインストール済み\n\n```terminal\n$ npm i -g @ngrx/schematics\n```\n\n\n## 1. Angularアプリを生成（1分）\n\n* ng newコマンドを実行します。\n\n```terminal\n$ ng new ngrx-tutorial\n```\n\n* 生成されたアプリ配下に移動し、一旦Webアプリを立ち上げてみます。\n\n```terminal\n$ cd ngrx-tutorial\n$ ng serve -o\n```\n\n* ブラウザが起動し下記のような画面が表示されたら成功です。\n![スクリーンショット 2018-07-30 1.03.59.png](https://qiita-image-store.s3.amazonaws.com/0/49915/5c19c3f0-104a-3ef2-a33d-315c0f0a3f9f.png)\n\n\n\n## 2. ngrxを使わずにカウント処理実装（2分）\nカウント処理の資産は全て`src/app/counter`フォルダ配下に作成します。\nまずはコマンドラインからボイラープレートを作成し、その後カウント処理を実装します。\n### ボイラープレート作成\n\n\n* カウント処理関連資産をまとめるモジュールを作成します。\n    * このモジュールをアプリ全体のモジュールに登録するため`--module`オプションを指定します。\n\n```terminal\n$ ng g module counter --module=app.module.ts\n```\n\n\n* カウント処理用のコンポーネントを作成します。\n    * 上記で作成したモジュールにコンポーネントを登録するため`--module`オプションを指定します。\n    * 最終的にアプリ全体のモジュールにコンポーネントを登録するため`--export`オプションを指定します。\n\n```terminal\n$ ng g component counter --module=counter/counter.module.ts --export\n```\n\n\n* `app.component.html`修正し、作成したカウント処理用のコンポーネントを呼び出すようにします。\n\n```html:app.component.html\n<app-counter></app-counter>\n```\n\n* 一旦ここまででWebアプリを立ち上げてみます。\n\n```terminal\n$ ng serve -o\n```\n\n* ブラウザが起動し、下記画面が表示されます。開発者ツールでエラーがなければ成功です。\n\n![スクリーンショット 2018-07-30 1.06.30.png](https://qiita-image-store.s3.amazonaws.com/0/49915/772a7501-34a7-3ef1-6666-d13e79382ce6.png)\n\n\n### 処理実装\n\n* カウント用コンポーネントで実際の処理を記述します。\n\n```ts:src/app/counter/counter.component.ts\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n  count = 0;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  increment() {\n    this.count = this.count + 1;\n  }\n\n  decrement() {\n    this.count = this.count - 1;\n  }\n\n}\n\n```\n\n\n```html:src/app/counter/counter.component.html\n<button (click)=\"increment()\">+</button>\n<button (click)=\"decrement()\">-</button>\n<div>Count: {{count}}</div>\n```\n\n\n* ここまででWebアプリを立ち上げてみます。\n\n```terminal\n$ ng serve -o\n```\n\n* ブラウザが起動し下記画面が表示されます。`+`,`-`ボタンをクリックすると数字が増えたり減ったりした、開発者ツールでもエラーがなければ成功です。\n\n![スクリーンショット 2018-07-30 0.59.12.png](https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png)\n\n\n## 3. ngrxインストール、初期設定（2分）\n@ngrx/storeをアプリに導入し、初期設定をします。\n\n\n* 下記ライブラリをインストールします。\n    * `@ngrx/schematics`\n        * Angualr CLIでngrxの雛形を作るためのライブラリ\n    * `@ngrx/store`\n        * ngrxでStore,Reducer,Actionを使うためのライブラリ\n    * `@ngrx/store-devtools`\n        * 強力なデバッカを使えるようにするためのライブラリ\n\n```terminal\n$ npm i -D @ngrx/schematics\n$ npm i -s @ngrx/store\n$ npm i -s @ngrx/store-devtools\n```\n\n\n*`@ngrx/schematics`をデフォルトのSchematicsに追加します（コマンドラインでngrxのボイラープレート生成時に`@ngrx/schematics`の指定を省略できるようにするためです。）\n\n```terminal\n$ ng config cli.defaultCollection @ngrx/schematics\n```\n\n* 上記を実行すると、`angular.json`にこのような設定が追加されます。\n\n```json:angular.json\n  \"defaultProject\": \"ngrx-tutorial\",\n  \"cli\": {\n    \"defaultCollection\": \"@ngrx/schematics\"\n  }\n```\n\n* ルートのStoreを作成します。\n    * `src/app/state`配下に生成したいので`--statePath`オプションを指定します。\n    * アプリ全体のモジュールに登録したいので`--module`オプションを指定します。\n\n```terminal\n$ ng g store state --statePath state --root --module app.module.ts\n```\n\n* 上記コマンドで更新した`src/app/app.module.ts`で`environment`のimport文のパスでエラーが出ている場合は修正してください。\n\n```diff:app/src/app.module.ts\n- import { environment } from '../../environments/environment';\n+ import { environment } from '../environments/environment';\n```\n\n* ここまででWebアプリを立ち上げてみます。\n\n```terminal\n$ ng serve -o\n```\n\n* 手順2の動作確認時と同様の挙動になります、開発者ツールでもエラーがなければ成功です。\n\n![スクリーンショット 2018-07-30 0.59.12.png](https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png)\n\n\n## 4. ngrxを使ってカウント処理実装（5分）\nここからは実際にStore、Reducer、Actionを作成し、カウント処理の値をStoreに移行します。\nここで作成する資産はカウンター処理に閉じたものなので、`src/app/counter/state`配下に作成します。\nまた`@ngrx/schemetics`のデフォルトではReducer、Actionなどの資産が、役割ごとにフォルダ分けされてしまいますが、１フォルダに集約したほうがソースが修正しやすいので、今回は全て`src/app/counter/state`の直下に作成します。\n\n\n### ボイラープレート生成\n\n\n* Store\n    * `src/app/counter/state`直下に作成するため`--statePath`オプションを指定します。\n    * カウント処理関連モジュールに登録したいので`--module`オプションを指定します。\n\n```terminal\n$ ng g store counter/counter --statePath state --module counter.module.ts\n```\n\n* Reducer\n    * 上記で作成したStoreに本Reducerを登録したいため`--reducers`オプションを指定します。\n\n```terminal\n$ ng g reducer counter/state/counter --reducers index.ts\n```\n\n* Action\n    * `src/app/counter/state`直下に作成するため`--flat`オプションを登録します。\n\n```terminal\n$ ng g action counter/state/counter --flat\n``` \n\n※この時点ではコンパイルエラーがでますので、動作確認はできません。そのまま次に進みます。\n\n\n## 処理実装\n依存関係の都合でボイラープレートとは逆順で実装していきます。\n\n### Action\nボイラープレート生成時から下記のように修正します。\n※コメントはコードの説明なので無視して実装してください。\n\n```diff:src/app/counter/state/counter.actions.ts\nimport { Action } from '@ngrx/store';\n\nexport enum CounterActionTypes {\n// Actionごとに型を定義します。\n-  LoadCounters = '[Counter] Load Counters'\n+  CountIncrement = '[Counter] Increment Count',\n+  CountDecrement = '[Counter] Decrement Count'\n}\n\n// Actionごとに@ngrx.storeのActionをインプリしたクラスを作成します。\n// 複雑な処理をする場合はコンストラクタ引数をとりますが、\n// 本チュートリアルでは簡単のため引数なしにしています。\n- export class Counter implements Action {\n-   readonly type = CounterActionTypes.LoadCounters;\n- }\n+ export class CountIncrement implements Action {\n+   readonly type = CounterActionTypes.CountIncrement;\n+   public constructor() {}\n+ }\n+ \n+ export class CountDecrement implements Action {\n+   readonly type = CounterActionTypes.CountDecrement;\n+   public constructor() {}\n+ }\n\n\n// 上記で定義したActionクラスを集約した型を定義します。Reducerで使うためです。\n- export type CounterActions = LoadCounters;\n+ export type CounterActions = CountIncrement | CountDecrement;\n```\n\n\n## Reducer作成\n\n```diff:src/app/counter/state/counter.reducer.ts\nimport { Action } from '@ngrx/store';\n+ import { CounterActionTypes } from './counter.actions';\n\n\nexport interface State {\n// カウンター処理に置けるStateを定義します。\n+   count: number;\n}\n\nexport const initialState: State = {\n// カウンター処理に置けるStateの初期値を定義します。\n+   count: 0\n};\n\n\nexport function reducer(state = initialState, action: Action): State {\n  switch (action.type) {\n// 引数として受け取ったActionの型に応じて処理を振り分けます\n// ここではカウンター処理に関連するアクションのみ拾って、他はStateをそのまま返します。\n+     case CounterActionTypes.CountIncrement:\n// Stateを変更する場合は、Stateがイミュータブルになるように元のStateには変更を加えず\n// Object.assingで新規オブジェクトを作るようにします。\n+       return Object.assign({}, { ...state, count : state.count + 1 });\n+     case CounterActionTypes.CountDecrement:\n+       return Object.assign({}, { ...state, count : state.count - 1 });\n    default:\n      return state;\n  }\n}\n\n// コンポーネントでStateのCountを取得するための関数を定義します。\n// Storeの方にも定義しますが、ここでは本ファイルで定義している\n// Stateのプロパティに関連する処理のみ定義します。\n+ export const getCount = (state: State) => state.count;\n```\n\n* Store\n\n```diff:src/app/counter/state/index.ts\nimport {\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\n// ng gコマンド生成時は相対パスがずれている可能性があるため\n// その場合は修正する\n- import { environment } from '../../environments/environment';\n+ import { environment } from '../../../environments/environment';\nimport * as fromCounter from './counter.reducer';\n\nexport interface State {\n\n  counter: fromCounter.State;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n  counter: fromCounter.reducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n\n// コンポーネントでStateのプロパティを取得するための関数を定義します。\n// 複数コンポーネントで使う度に定義するのは冗長なのでココで共通的に定義します。\n+ export const getCounterFeatureState = createFeatureSelector<State>('counter');\n+ export const getCounter = createSelector(getCounterFeatureState, s => s.counter);\n+ export const getCount = createSelector(getCounter, fromCounter.getCount);\n```\n\n\n\n* Component\n\n```diff:src/app/counter/counter.component.ts\nimport { Component, OnInit } from '@angular/core';\n+ import { Observable } from 'rxjs';\n+ import { Store } from '@ngrx/store';\n\n+ import * as CounterReducer from './state/counter.reducer';\n+ import * as CounterActions from './state/counter.actions';\n+ import { getCount } from './state';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n// Storeでの値変更を順次受け付けれるように型をObservableに変更します\n-   count = 0;\n+   count$: Observable<number>;\n\n// Storeをインジェクションします\n-   constructor() { }\n+   constructor(private store: Store<CounterReducer.State>) {\n// Storeからカウンタを取得します\n+     this.count$ = store.select(getCount);\n+  }\n\n  ngOnInit() {\n  }\n\n  increment() {\n// インクリメントの実処理はカウンタのReducerに任せるので\n// ここではActionをdispatchするだけです。\n-     this.count = this.count + 1;\n+     this.store.dispatch(new CounterActions.CountIncrement());\n  }\n\n  decrement() {\n-     this.count = this.count - 1;\n+     this.store.dispatch(new CounterActions.CountDecrement());\n  }\n\n}\n```\n\n* ConponentのHTML\n\n```diff:src/app/counter/counter.component.html\n<button (click)=\"increment()\">+</button>\n<button (click)=\"decrement()\">-</button>\n<!-- 変数名と型が変わったのでHTMLも若干修正します -->\n- <div>Count: {{count }}</div>\n+ <div>Count: {{count$ | async }}</div>\n```\n\n* Webアプリを立ち上げてみます。\n\n```terminal\n$ ng serve -o\n```\n\n* 開発者ツールなどで全くエラーが出ていなければ成功です。見た目は変わっていませんが、Countは`@ngrx/store`で管理されるようになっています。\n\n![スクリーンショット 2018-07-30 0.59.12.png](https://qiita-image-store.s3.amazonaws.com/0/49915/d506bc6e-cdce-4d00-1109-2af9f4780663.png)\n\n## 補足：ストアとストア登録方法\nストアとストア登録処理はボイラープレートで生成するのでココで改めて説明します。\n\n**まずはルートのストアです。**\nストアは`src/app/state/index.ts`に作成されます。\n中身を見るとわかりますが、実態はReducerを集約したActionReducerMapです。\nReducerを新しく作成した時は、このマップにどんどん追加していきます。\n\n```ts:src/app/state/index.ts\nimport {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  // ココにReducerが追加されていきます。\n  // 今回のチュートリアルではルートのストアに１つもReducerを定義していないので空っぽです。\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n\n```\n\nストアをモジュールに登録するには下記のように`StoreModule.forRoot`を使います(ボイラープレートでやってくれます)\n\n```ts:src/app/app.module.ts\n@NgModule({\n  // ・・・\n  imports: [\n    // ・・・\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n    // ・・・\n  ],\n  // ・・・\n})\nexport class AppModule { }\n\n```\n\n**次にカウンタのストアに関してです。**\nこちらもルートの場合とほぼ同じです。\n\n```ts:src/app/counter/state/index.ts\n// ・・・\nexport const reducers: ActionReducerMap<State> = {\n  // カウンタのReducerをマップに登録しています。\n  counter: fromCounter.reducer,\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n// ・・・\n```\n\nただ登録は`StoreModule.forFeature`を使います。\nこのメソッドは、機能毎に状態管理する時に使うもので、ルートのストアに指定した名前で登録されます。使う時になったら遅延ロードしてくれる機能を持っています。\n\n```ts:src/app/counter/counter.module.ts\n// ・・・\nimport * as fromCounter from './state';\n// ・・・\n@NgModule({\n  imports: [\n    // ・・・\n    // アプリ全体のストアにcounterという名前で登録します\n    StoreModule.forFeature('counter', fromCounter.reducers, { metaReducers: fromCounter.metaReducers })\n    // ・・・\n  ],\n  // ・・・\n})\nexport class CounterModule { }\n\n```\n\n\n## まとめ\n以上で`@ngrx/schematics`を使った`@ngrx/store`のチュートリアルは終了です。\n`ngrx`ライブラリは他にも`@ngrx/router-store`、`@ngrx/entity`、`@ngrx/effect`があるので、\n今回のアプリをベースに拡張し、理解を深めてみるのも良いかもしれません。\n\nAngularはVue.jsなどと比較するとボイラープレートが多くなってしまいます。\nしかし、ソースコード自動生成機能が充実しているので、けっこう便利なフレームワークです！\nあまり周りでAngular使ってる人がいなくて寂しいのですが、、、、皆さん是非Angular使いましょう！\n\n## 参考\n* GitHub\n    * [@ngrx/store](https://github.com/ngrx/platform/blob/master/docs/store/README.md#ngrxstore)\n        * 公式ページ。サンプルは少し古いですが、ドキュメントは充実しています。\n    * [@ngrx/schematics](https://github.com/ngrx/platform/blob/master/docs/schematics/README.md)\n        * 各リンクに行くと、コマンドのオプションの説明などが記載されています。\n* Medium\n    * [Managing State in Angular Applications](https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f)\n        * Angularで状態管理する時のベストプラクティスを検討し、最終的に@ngrx/storeを紹介している記事です。ソースコードもGitHubにあり、大変参考になります。\n* Qiita\n    * [@ngrx/storeと@ngrx/effectsの使い方](https://qiita.com/puku0x/items/0a8e7224761dc549bd06)\n        * GitHubに[サンプル](https://github.com/puku0x/ngrx-todo)もありコード例が多く大変参考になりました。\n    * [@ngrx/schematicsを触ってみる](https://qiita.com/musou1500/items/8003c4a3f2b2e80d919f)\n        * `@ngrx/schematics`の使い方が網羅されており参考になりました。\n    * [ngrxでハマったポイント](https://qiita.com/gen2-gk/items/5e5c5b81243def8edc2c#ngrx-%E9%96%A2%E9%80%A3%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AF1%E3%81%A4%E3%81%AE%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B)\n        * ngrx関連資産をstoreフォルダ配下に集約するという知見はココを参考にさせていただきました。\n    * [ngrx紹介](https://qiita.com/kouMatsumoto/items/c8297466c1824953632f)\n        * ngrxを知るきっかけになった記事です。\n\n\n\n","comments_count":0,"created_at":"2018-07-30T18:01:02+09:00","likes_count":12,"reactions_count":0,"user":{"id":"Takumon"}},"next":{"fields":{"slug":"/description/","title":"Gatsby Starter Qiita概要","date":"2018-11-04T15:00:00.000+09:00","excerpt":"概要gatsby-starter-blogに、gatsby-source-qiitaを追加して、GatsbyブログでQiitaの記事も扱えるようにしたサンプルです。"}}}}